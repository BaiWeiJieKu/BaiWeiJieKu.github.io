I"*!<ul id="markdown-toc">
  <li><a href="#选择排序" id="markdown-toc-选择排序">选择排序</a>    <ul>
      <li><a href="#原理" id="markdown-toc-原理">原理</a></li>
      <li><a href="#基本思想" id="markdown-toc-基本思想">基本思想</a></li>
      <li><a href="#举例" id="markdown-toc-举例">举例</a></li>
      <li><a href="#代码实现" id="markdown-toc-代码实现">代码实现</a></li>
      <li><a href="#时间复杂度" id="markdown-toc-时间复杂度">时间复杂度</a></li>
    </ul>
  </li>
</ul>
<h3 id="选择排序">选择排序</h3>

<h4 id="原理">原理</h4>

<p><img src="https://raw.githubusercontent.com/BaiWeiJieKu/BaiWeiJieKu.github.io/master/images/paixufuzadu.png" alt="" /></p>

<ul>
  <li>每一趟从待排序的记录中选出最小的元素，顺序放在已排好序的序列最后，直到全部记录排序完毕。也就是：每一趟在n-i+1(i=1，2，…n-1)个记录中选取关键字最小的记录作为有序序列中第i个记录</li>
  <li>基于此思想的算法主要有<a href="http://baike.so.com/doc/5992150-6205119.html">简单选择排序</a>、树型选择排序和<a href="http://baike.so.com/doc/1008529-1066354.html">堆排序</a>。（这里只介绍常用的简单选择排序）</li>
</ul>

<h4 id="基本思想">基本思想</h4>

<ul>
  <li>简单选择排序的基本思想：给定数组：int[] arr={里面n个数据}；</li>
  <li>第1趟排序，在待排序数据arr[1]~arr[n]中选出最小的数据，将它与arrr[1]交换；</li>
  <li>第2趟，在待排序数据arr[2]~arr[n]中选出最小的数据，将它与r[2]交换；</li>
  <li>以此类推，第i趟在待排序数据arr[i]~arr[n]中选出最小的数据，将它与r[i]交换，直到全部排序完成</li>
</ul>

<h4 id="举例">举例</h4>

<ul>
  <li>
    <p>数组 int[] arr={5,2,8,4,9,1};</p>
  </li>
  <li>
    <p>第一趟排序： 原始数据：5  2  8  4  9  1</p>

    <p>最小数据1，把1放在首位，也就是1和5互换位置，</p>

    <p>排序结果：1  2  8  4  9  5</p>
  </li>
  <li>
    <p>第二趟排序：</p>

    <p>第1以外的数据{2  8  4  9  5}进行比较，2最小，</p>

    <p>排序结果：1  2  8  4  9  5</p>
  </li>
  <li>
    <p>每一趟排序获得最小数的方法：for循环进行比较，定义一个第三个变量temp，首先前两个数比较，把较小的数放在temp中，然后用temp再去跟剩下的数据比较，如果出现比temp小的数据，就用它代替temp中原有的数据</p>
  </li>
</ul>

<h4 id="代码实现">代码实现</h4>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">//选择排序</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">SelectionSort</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">int</span><span class="o">[]</span> <span class="n">arr</span><span class="o">={</span><span class="mi">1</span><span class="o">,</span><span class="mi">3</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="mi">45</span><span class="o">,</span><span class="mi">65</span><span class="o">,</span><span class="mi">33</span><span class="o">,</span><span class="mi">12</span><span class="o">};</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"交换之前："</span><span class="o">);</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="nl">num:</span><span class="n">arr</span><span class="o">){</span>
            <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span><span class="n">num</span><span class="o">+</span><span class="s">" "</span><span class="o">);</span>
        <span class="o">}</span>        
        <span class="c1">//选择排序的优化</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">arr</span><span class="o">.</span><span class="na">length</span> <span class="o">-</span> <span class="mi">1</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span><span class="c1">// 做第i趟排序</span>
            <span class="kt">int</span> <span class="n">k</span> <span class="o">=</span> <span class="n">i</span><span class="o">;</span>
            <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="n">k</span> <span class="o">+</span> <span class="mi">1</span><span class="o">;</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="n">arr</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">j</span><span class="o">++){</span><span class="c1">// 选最小的记录</span>
                <span class="k">if</span><span class="o">(</span><span class="n">arr</span><span class="o">[</span><span class="n">j</span><span class="o">]</span> <span class="o">&lt;</span> <span class="n">arr</span><span class="o">[</span><span class="n">k</span><span class="o">]){</span> 
                    <span class="n">k</span> <span class="o">=</span> <span class="n">j</span><span class="o">;</span> <span class="c1">//记下目前找到的最小值所在的位置</span>
                <span class="o">}</span>
            <span class="o">}</span>
            <span class="c1">//在内层循环结束，也就是找到本轮循环的最小的数以后，再进行交换</span>
            <span class="k">if</span><span class="o">(</span><span class="n">i</span> <span class="o">!=</span> <span class="n">k</span><span class="o">){</span>  <span class="c1">//交换a[i]和a[k]</span>
                <span class="kt">int</span> <span class="n">temp</span> <span class="o">=</span> <span class="n">arr</span><span class="o">[</span><span class="n">i</span><span class="o">];</span>
                <span class="n">arr</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="n">arr</span><span class="o">[</span><span class="n">k</span><span class="o">];</span>
                <span class="n">arr</span><span class="o">[</span><span class="n">k</span><span class="o">]</span> <span class="o">=</span> <span class="n">temp</span><span class="o">;</span>
            <span class="o">}</span>    
        <span class="o">}</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">();</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"交换后："</span><span class="o">);</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="nl">num:</span><span class="n">arr</span><span class="o">){</span>
            <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span><span class="n">num</span><span class="o">+</span><span class="s">" "</span><span class="o">);</span>
        <span class="o">}</span>
    <span class="o">}</span>

<span class="o">}</span>
</code></pre></div></div>

<h4 id="时间复杂度">时间复杂度</h4>

<ul>
  <li>简单选择排序的比较次数与序列的初始排序无关。 假设待排序的序列有 N 个元素，则比较次数永远都是N (N - 1) / 2。而移动次数与序列的初始排序有关。当序列正序时，移动次数最少，为 0。当序列反序时，移动次数最多，为3N (N - 1) /  2。</li>
  <li>简单排序的时间复杂度为 O(N2)</li>
</ul>
:ET