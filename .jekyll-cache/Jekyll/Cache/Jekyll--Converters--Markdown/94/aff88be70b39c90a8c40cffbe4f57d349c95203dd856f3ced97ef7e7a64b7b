I"B@<ul id="markdown-toc">
  <li><a href="#标签" id="markdown-toc-标签">标签</a>    <ul>
      <li><a href="#标题标签" id="markdown-toc-标题标签">标题标签</a></li>
      <li><a href="#段落标签" id="markdown-toc-段落标签">段落标签</a></li>
      <li><a href="#换行" id="markdown-toc-换行">换行</a></li>
      <li><a href="#水平线" id="markdown-toc-水平线">水平线</a></li>
      <li><a href="#转义字符串" id="markdown-toc-转义字符串">转义字符串</a></li>
      <li><a href="#图片标签" id="markdown-toc-图片标签">图片标签</a></li>
      <li><a href="#meta标签" id="markdown-toc-meta标签">meta标签</a></li>
      <li><a href="#iframe标签" id="markdown-toc-iframe标签">iframe标签</a></li>
      <li><a href="#超链接a标签" id="markdown-toc-超链接a标签">超链接a标签</a></li>
      <li><a href="#center标签" id="markdown-toc-center标签">center标签</a></li>
      <li><a href="#文本标签" id="markdown-toc-文本标签">文本标签</a></li>
      <li><a href="#列表标签" id="markdown-toc-列表标签">列表标签</a></li>
    </ul>
  </li>
  <li><a href="#块和内联" id="markdown-toc-块和内联">块和内联</a>    <ul>
      <li><a href="#块" id="markdown-toc-块">块</a></li>
      <li><a href="#内联" id="markdown-toc-内联">内联</a></li>
    </ul>
  </li>
  <li><a href="#表格" id="markdown-toc-表格">表格</a></li>
  <li><a href="#表单" id="markdown-toc-表单">表单</a>    <ul>
      <li><a href="#输入框" id="markdown-toc-输入框">输入框</a></li>
      <li><a href="#按钮" id="markdown-toc-按钮">按钮</a></li>
      <li><a href="#文本域" id="markdown-toc-文本域">文本域</a></li>
      <li><a href="#提交与重置" id="markdown-toc-提交与重置">提交与重置</a></li>
    </ul>
  </li>
  <li><a href="#框架集" id="markdown-toc-框架集">框架集</a></li>
</ul>
<h3 id="标签">标签</h3>

<h4 id="标题标签">标题标签</h4>

<ul>
  <li>在HTML中，一共有六级标题标签，h1 ~ h6，h1标签非常重要，它会影响到页面在搜索引擎中的排名，页面只能写一个h1</li>
</ul>

<h4 id="段落标签">段落标签</h4>

<ul>
  <li>使用p标签来表示一个段落，p标签中的文字，默认会独占一行，并且段与段之间会有一个间距</li>
</ul>

<h4 id="换行">换行</h4>

<ul>
  <li>在HTML中，字符之间写再多的空格，浏览器也会当成一个空格解析，换行也会当成一个空格解析。在页面中可以使用br标签来表示一个换行，br标签是一个自结束标签</li>
</ul>

<h4 id="水平线">水平线</h4>

<ul>
  <li>hr标签也是一个自结束标签，可以在页面中生成一条水平线</li>
</ul>

<h4 id="转义字符串">转义字符串</h4>

<ul>
  <li>在HTML中，一些如&lt; &gt;这种特殊字符是不能直接使用，需要使用一些特殊的符号来表示这些特殊字符，这些特殊符号我们称为实体（转义字符串）</li>
  <li>&amp;实体的名字;</li>
  <li><code class="language-plaintext highlighter-rouge">&lt;  &amp;lt;</code></li>
  <li><code class="language-plaintext highlighter-rouge">&gt;  &amp;gt;</code></li>
  <li><code class="language-plaintext highlighter-rouge">空格  &amp;nbsp;</code></li>
  <li><code class="language-plaintext highlighter-rouge">版权符号 &amp;copy;</code></li>
</ul>

<h4 id="图片标签">图片标签</h4>

<ul>
  <li>使用img标签来向网页中引入一个外部图片，img标签也是一个自结束标签</li>
  <li>src：设置一个外部图片的路径</li>
  <li>alt：可以用来设置在图片不能显示时，对图片的描述，搜索引擎可以通过alt属性来识别不同的图片，如果不写alt属性，则搜索引擎不会对img中的图片进行收录</li>
  <li>width：可以用来修改图片的宽度,一般使用px作为单位
    <ul>
      <li>height：可以用来修改图片的高度，一般使用px作为单位</li>
    </ul>
  </li>
  <li>宽度和高度两个属性如果指设置一个，另一个也会同时等比例调整大小</li>
  <li>JPEG(JPG)：JPEG图片支持的颜色比较多，图片可以压缩，但是不支持透明</li>
  <li>GIF：支持的颜色少，只支持简单的透明，支持动态图</li>
  <li>PNG：支持的颜色多，并且支持复杂的透明</li>
</ul>

<h4 id="meta标签">meta标签</h4>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;!-- 
			使用meta标签还可以用来设置网页的关键字
		--&gt;
		&lt;meta name="keywords" content="HTML5,JavaScript,前端,Java" /&gt;
		
		&lt;!-- 
			还可以用来指定网页的描述
			搜索引擎在检索页面时，会同时检索页面中的关键词和描述，但是这两个值不会影响页面在搜索引擎中的排名
		--&gt;
		&lt;meta name="description" content="发布h5、js等前端相关的信息" /&gt;
		
		
		&lt;!-- 
			使用meta可以用来做请求的重定向
			&lt;meta http-equiv="refresh" content="秒数;url=目标路径" /&gt;
		--&gt;
		&lt;meta http-equiv="refresh" content="5;url=http://www.baidu.com" /&gt;
</code></pre></div></div>

<h4 id="iframe标签">iframe标签</h4>

<ul>
  <li>使用iframe来创建一个内联框架，使用内联框架可以引入一个外部的页面</li>
  <li>src ：指向一个外部页面的路径，可以使用相对路径</li>
  <li>width：</li>
  <li>height：</li>
  <li>name ：可以为内联框架指定一个name属性</li>
</ul>

<h4 id="超链接a标签">超链接a标签</h4>

<ul>
  <li>使用a标签来创建一个超链接</li>
  <li>使用超链接可以让我们从一个页面跳转到另一个页面</li>
  <li>href:指向链接跳转的目标地址,可以写一个相对路径也可以写一个完整的地址</li>
  <li>target：可以用来指定打开链接的位置。_self，表示在当前窗口中打开（默认值）。_blank，在新的窗口中打开链接。可以设置一个内联框架的name属性值，链接将会在指定的内联框架中打开</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;a href="demo03.html" target="tom"&gt;我是一个超链接&lt;/a&gt;
&lt;br /&gt; &lt;br /&gt;
&lt;iframe src="demo02.html" name="tom"&gt;&lt;/iframe&gt;
</code></pre></div></div>

<ul>
  <li>跳转到id为bottom的元素所在的位置，直接在href中写 #id属性值</li>
  <li>如果将链接地址设置为#，则点击超链接以后，会自动跳转到当前页面的顶部</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;a href="#bottom"&gt;去底部&lt;/a&gt;
&lt;a id="bottom" href="#"&gt;回到顶部&lt;/a&gt;
</code></pre></div></div>

<ul>
  <li>发送电子邮件的超链接，点击链接以后可以自动打开计算机中默认的邮件客户端href=”mailto:邮件地址”</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;a href="mailto:abc@atguigu.com"&gt;联系我们&lt;/a&gt;
</code></pre></div></div>

<h4 id="center标签">center标签</h4>

<ul>
  <li>center标签中的内容，会默认在页面中居中显示</li>
  <li>我们可以将要居中的元素，全都放到center中</li>
</ul>

<h4 id="文本标签">文本标签</h4>

<ul>
  <li>em和strong：这两个标签都表示一个强调的内容，em主要表示语气上的强调,em在浏览器中默认使用斜体显示，strong表示强调的内容，比em更强烈，默认使用粗体显示</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;p&gt;
	今天天气&lt;em&gt;真不错&lt;/em&gt;！
&lt;/p&gt;
&lt;p&gt;
	&lt;strong&gt;
		注意：如果你不认真上课，你就找不到好工作！
	&lt;/strong&gt;
&lt;/p&gt;
</code></pre></div></div>

<ul>
  <li>
    <p>i标签中的内容会以斜体显示</p>

    <p>b标签中的内容会以加粗显示</p>
  </li>
  <li>
    <p>small标签中的内容会比他的父元素中的文字要小一些,比如：合同中小字，网站的版权声明都可以放到small</p>
  </li>
  <li>
    <p>网页中所有的加书名号的内容都可以使用cite标签，表示参考的内容，比如：书名 歌名 话剧名 电影名 。。。</p>
  </li>
  <li>
    <p>q标签表示一个短的引用（行内引用）,q标签引用的内容，浏览器会默认加上引号</p>
  </li>
  <li>
    <p>blockquote标签表示一个长引用（块级引用）</p>
  </li>
  <li>
    <p>使用sup标签来设置一个上标,sub标签用来表示一个下标</p>
  </li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;p&gt;2&lt;sup&gt;2&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;赵薇&lt;sup&gt;&lt;a href="#"&gt;[1]&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;p&gt;H&lt;sub&gt;2&lt;/sub&gt;O&lt;/p&gt;
</code></pre></div></div>

<ul>
  <li>使用del标签来表示一个删除的内容,del标签中的内容，会自动添加删除线</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;p&gt;
    &lt;del&gt;17.75&lt;/del&gt; &lt;br /&gt;
    15.54 &lt;br /&gt;
&lt;/p&gt;
</code></pre></div></div>

<ul>
  <li>ins表示一个插入的内容,ins中的的内容，会自动添加下划线</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;p&gt;
	我们的老师真&lt;ins&gt;好啊&lt;/ins&gt;！
&lt;/p&gt;
</code></pre></div></div>

<ul>
  <li>
    <p>pre是一个预格式标签，会将代码中的格式保存，不会忽略多个空格</p>

    <p>code专门用来表示代码</p>

    <p>我们一般结合使用pre和code来表示一段代码</p>
  </li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;pre&gt;
    &lt;code&gt;
        window.onload = function(){
        	alert("Hello World");
        };
    &lt;/code&gt;
&lt;/pre&gt;
</code></pre></div></div>

<h4 id="列表标签">列表标签</h4>

<ul>
  <li>
    <p>无序列表</p>

    <p>使用ul标签来创建一个无序列表</p>

    <p>使用li在ul中创建一个一个的列表项，一个li就是一个列表项</p>

    <p>通过type属性可以修改无序列表的项目符号：disc，默认值，实心的圆点；square，实心的方块；circle，空心的圆</p>
  </li>
  <li>
    <p>有序列表</p>

    <p>使用ol标签来创建一个无序列表</p>

    <p>type属性，可以指定序号的类型：1，默认值，使用阿拉伯数字；a/A 采用小写或大写字母作为序号；i/I 采用小写或大写的罗马数字作为序号</p>
  </li>
  <li>
    <p>列表之间都是可以互相嵌套，可以在无序列表中放个有序列表，也可以在有序列表中放一个无序列表</p>
  </li>
  <li>
    <p>去掉项目符号：设置css格式：<code class="language-plaintext highlighter-rouge">ul {list-style: none;}</code></p>
  </li>
  <li>
    <p>使用dl来创建一个定义列表</p>

    <p>dt ： 被定义的内容</p>

    <p>dd ： 对定义内容的描述</p>
  </li>
</ul>

<h3 id="块和内联">块和内联</h3>

<h4 id="块">块</h4>

<ul>
  <li>所谓的块元素就是会独占一行的的元素,无论他的内容有多少他都会独占一整行。</li>
  <li>div，p， h1， h2， h3</li>
  <li>p元素不可以包含任何块元素</li>
  <li>div这个标签没有任何语义，就是一个纯粹的块元素，并且不会为它里边的元素设置任何的默认样式，div元素主要用来对页面进行布局的</li>
</ul>

<h4 id="内联">内联</h4>

<ul>
  <li>所谓的行内元素（内联元素），指的是只占自身大小的元素，不会占用一行</li>
  <li>常见的内联元素：a， img， iframe， span</li>
  <li>a元素可以包含任意元素，除了他本身</li>
  <li>span没有任何的语义，span标签专门用来选中文字，然后为文字来设置样式</li>
</ul>

<h3 id="表格">表格</h3>

<ul>
  <li>
    <p>在HTML中，使用table标签来创建一个表格</p>
  </li>
  <li>
    <p>在table标签中使用tr来表示表格中的一行，有几行就有几个tr</p>
  </li>
  <li>
    <p>在tr中需要使用td来创建一个单元格，有几个单元格就有几个td</p>
  </li>
  <li>
    <p>rowspan用来设置纵向的合并单元格</p>
  </li>
  <li>
    <p>colspan横向的合并单元格</p>
  </li>
  <li>
    <p>table和td边框之间默认有一个距离，通过border-spacing属性可以设置这个距离</p>
  </li>
  <li>
    <p>border-collapse可以用来设置表格的边框合并，如果设置了边框合并，则border-spacing自动失效</p>
  </li>
  <li>
    <p>有一些情况下表格是非常的长的，这时就需要将表格分为三个部分，表头，表格的主体，表格底部</p>

    <p>thead 表头：thead中的内容，永远会显示在表格的头部</p>

    <p>tbody 表格主体：tbody中的内容，永远都会显示表格的中间</p>

    <p>tfoot 表格底部：tfoot中的内容，永远都会显示表格的底部</p>

    <p>这三个标签的作用，就来区分表格的不同的部分，他们都是table的子标签，都需要直接写到table中，tr需要写在这些标签当中</p>

    <p>需要通过tbody &gt; tr 选中行</p>
  </li>
</ul>

<h3 id="表单">表单</h3>

<ul>
  <li>使用form标签创建一个表单，form标签中必须指定一个action属性，该属性指向的是一个服务器的地址，当我们提交表单时将会提交到action属性对应的地址</li>
</ul>

<h4 id="输入框">输入框</h4>

<ul>
  <li>使用input来创建一个文本框，它的type属性是text，如果希望表单项中的数据会提交到服务器中，还必须给表单项指定一个name属性</li>
  <li>使用input创建一个密码框，它的type属性值是password</li>
</ul>

<h4 id="按钮">按钮</h4>

<ul>
  <li>使用input来创建一个单选按钮，它的type属性使用radio，单选按钮通过name属性进行分组，name属性相同是一组按钮</li>
  <li>还必须指定一个value属性，这样被选中的表单项的value属性值将会最终提交给服务器</li>
  <li>如果希望在单选按钮或者是多选框中指定默认选中的选项，则可以在希望选中的项中添加checked=”checked”属性</li>
  <li>使用input创建一个多选框，它的type属性使用checkbox</li>
  <li>使用select来创建一个下拉列表，下拉列表的name属性需要指定给select，而value属性需要指定给option，可以通过在option中添加selected=”selected”来将选项设置为默认选中，当为select添加一个multiple=”multiple”，则下拉列表变为一个多选的下拉列表</li>
</ul>

<h4 id="文本域">文本域</h4>

<ul>
  <li>使用textarea创建一个文本域</li>
</ul>

<h4 id="提交与重置">提交与重置</h4>

<ul>
  <li>使用input创建一个提交按钮,它的type属性值是submit，在提交按钮中可以通过value属性来指定按钮上的文字</li>
  <li>使用input创建一个提交按钮,它的type属性值是reset，可以创建一个重置按钮，点击重置按钮以后表单中内容将会恢复为默认值</li>
</ul>

<h3 id="框架集">框架集</h3>

<ul>
  <li>
    <p>框架集和内联框架的作用类似，都是用于在一个页面中引入其他的外部的页面，框架集可以同时引入多个页面，而内联框架只能引入一个，在h5标准中，推荐使用框架集，而不使用内联框架</p>
  </li>
  <li>
    <p>使用frameset来创建一个框架集，注意frameset不能和body出现在同一个页面中，所以要使用框架集，页面中就不可以使用body标签</p>
  </li>
  <li>
    <p>rows，指定框架集中的所有的框架，一行一行的排列</p>

    <p>cols， 指定框架集中的所有的页面，一列一列的排列</p>

    <p>这两个属性frameset必须选择一个，并且需要在属性中指定每一部分所占的大小</p>

    <p>frameset中也可以再嵌套frameset</p>
  </li>
  <li>
    <p>frameset和iframe一样，它里边的内容都不会被搜索引擎所检索</p>
  </li>
  <li>
    <p>建议使用frameset而不使用iframe</p>
  </li>
</ul>
:ET