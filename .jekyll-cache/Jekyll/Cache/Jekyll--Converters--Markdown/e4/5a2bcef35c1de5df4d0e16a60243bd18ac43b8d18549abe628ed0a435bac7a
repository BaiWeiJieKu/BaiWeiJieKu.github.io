I"{P<ul id="markdown-toc">
  <li><a href="#定义" id="markdown-toc-定义">定义</a></li>
  <li><a href="#请假流程" id="markdown-toc-请假流程">请假流程</a>    <ul>
      <li><a href="#领导者" id="markdown-toc-领导者">领导者</a></li>
      <li><a href="#主任" id="markdown-toc-主任">主任</a></li>
      <li><a href="#经理" id="markdown-toc-经理">经理</a></li>
      <li><a href="#总经理" id="markdown-toc-总经理">总经理</a></li>
      <li><a href="#请假信息" id="markdown-toc-请假信息">请假信息</a></li>
      <li><a href="#模拟请假" id="markdown-toc-模拟请假">模拟请假</a></li>
      <li><a href="#添加新对象" id="markdown-toc-添加新对象">添加新对象</a></li>
    </ul>
  </li>
  <li><a href="#使用场景" id="markdown-toc-使用场景">使用场景</a></li>
</ul>
<h3 id="定义">定义</h3>

<ul>
  <li>将能够处理同一类请求的对象连成一条链，所提交的请求沿着链传递，链上的对象逐个判断是否有能力处理该请求，如果能则处理，如果不能则传递给链上的下一个对象</li>
  <li>大学中，奖学金审批</li>
  <li>公司中，公文审批</li>
</ul>

<h3 id="请假流程">请假流程</h3>

<ul>
  <li>如果请假天数小于3天，主任审批</li>
  <li>如果请假天数大于等于3天，小于10天，经理审批</li>
  <li>如果大于等于10天，小于30天，总经理审批</li>
  <li>如果大于等于30天，提示拒绝</li>
</ul>

<h4 id="领导者">领导者</h4>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">com.bjsxt.chainOfResp</span><span class="o">;</span>

<span class="cm">/**
 * 抽象类
 * @author Administrator
 *
 */</span>
<span class="kd">public</span> <span class="kd">abstract</span> <span class="kd">class</span> <span class="nc">Leader</span> <span class="o">{</span>
	<span class="kd">protected</span> <span class="nc">String</span> <span class="n">name</span><span class="o">;</span>
	<span class="kd">protected</span> <span class="nc">Leader</span> <span class="n">nextLeader</span><span class="o">;</span> <span class="c1">//责任链上的后继对象</span>
	
	<span class="kd">public</span> <span class="nf">Leader</span><span class="o">(</span><span class="nc">String</span> <span class="n">name</span><span class="o">)</span> <span class="o">{</span>
		<span class="kd">super</span><span class="o">();</span>
		<span class="k">this</span><span class="o">.</span><span class="na">name</span> <span class="o">=</span> <span class="n">name</span><span class="o">;</span>
	<span class="o">}</span>
	
	<span class="c1">//设定责任链上的后继对象</span>
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">setNextLeader</span><span class="o">(</span><span class="nc">Leader</span> <span class="n">nextLeader</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">this</span><span class="o">.</span><span class="na">nextLeader</span> <span class="o">=</span> <span class="n">nextLeader</span><span class="o">;</span>
	<span class="o">}</span>
	
	
	<span class="cm">/**
	 * 处理请求的核心的业务方法
	 * @param request
	 */</span>
	<span class="kd">public</span> <span class="kd">abstract</span> <span class="kt">void</span> <span class="nf">handleRequest</span><span class="o">(</span><span class="nc">LeaveRequest</span> <span class="n">request</span><span class="o">);</span>
	
<span class="o">}</span>

</code></pre></div></div>

<h4 id="主任">主任</h4>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">com.bjsxt.chainOfResp</span><span class="o">;</span>

<span class="cm">/**
 * 主任
 * @author Administrator
 *
 */</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Director</span> <span class="kd">extends</span> <span class="nc">Leader</span> <span class="o">{</span>

	<span class="kd">public</span> <span class="nf">Director</span><span class="o">(</span><span class="nc">String</span> <span class="n">name</span><span class="o">)</span> <span class="o">{</span>
		<span class="kd">super</span><span class="o">(</span><span class="n">name</span><span class="o">);</span>
	<span class="o">}</span>

	<span class="nd">@Override</span>
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">handleRequest</span><span class="o">(</span><span class="nc">LeaveRequest</span> <span class="n">request</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">if</span><span class="o">(</span><span class="n">request</span><span class="o">.</span><span class="na">getLeaveDays</span><span class="o">()&lt;</span><span class="mi">3</span><span class="o">){</span>
			<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"员工："</span><span class="o">+</span><span class="n">request</span><span class="o">.</span><span class="na">getEmpName</span><span class="o">()+</span><span class="s">"请假，天数："</span><span class="o">+</span><span class="n">request</span><span class="o">.</span><span class="na">getLeaveDays</span><span class="o">()+</span><span class="s">",理由："</span><span class="o">+</span><span class="n">request</span><span class="o">.</span><span class="na">getReason</span><span class="o">());</span>
			<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"主任："</span><span class="o">+</span><span class="k">this</span><span class="o">.</span><span class="na">name</span><span class="o">+</span><span class="s">",审批通过！"</span><span class="o">);</span>
		<span class="o">}</span><span class="k">else</span><span class="o">{</span>
			<span class="k">if</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">nextLeader</span><span class="o">!=</span><span class="kc">null</span><span class="o">){</span>
				<span class="k">this</span><span class="o">.</span><span class="na">nextLeader</span><span class="o">.</span><span class="na">handleRequest</span><span class="o">(</span><span class="n">request</span><span class="o">);</span>
			<span class="o">}</span>
		<span class="o">}</span>
	<span class="o">}</span>

<span class="o">}</span>

</code></pre></div></div>

<h4 id="经理">经理</h4>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">com.bjsxt.chainOfResp</span><span class="o">;</span>

<span class="cm">/**
 * 经理
 * @author Administrator
 *
 */</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Manager</span> <span class="kd">extends</span> <span class="nc">Leader</span> <span class="o">{</span>

	<span class="kd">public</span> <span class="nf">Manager</span><span class="o">(</span><span class="nc">String</span> <span class="n">name</span><span class="o">)</span> <span class="o">{</span>
		<span class="kd">super</span><span class="o">(</span><span class="n">name</span><span class="o">);</span>
	<span class="o">}</span>

	<span class="nd">@Override</span>
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">handleRequest</span><span class="o">(</span><span class="nc">LeaveRequest</span> <span class="n">request</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">if</span><span class="o">(</span><span class="n">request</span><span class="o">.</span><span class="na">getLeaveDays</span><span class="o">()&lt;</span><span class="mi">10</span><span class="o">){</span>
			<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"员工："</span><span class="o">+</span><span class="n">request</span><span class="o">.</span><span class="na">getEmpName</span><span class="o">()+</span><span class="s">"请假，天数："</span><span class="o">+</span><span class="n">request</span><span class="o">.</span><span class="na">getLeaveDays</span><span class="o">()+</span><span class="s">",理由："</span><span class="o">+</span><span class="n">request</span><span class="o">.</span><span class="na">getReason</span><span class="o">());</span>
			<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"经理："</span><span class="o">+</span><span class="k">this</span><span class="o">.</span><span class="na">name</span><span class="o">+</span><span class="s">",审批通过！"</span><span class="o">);</span>
		<span class="o">}</span><span class="k">else</span><span class="o">{</span>
			<span class="k">if</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">nextLeader</span><span class="o">!=</span><span class="kc">null</span><span class="o">){</span>
				<span class="k">this</span><span class="o">.</span><span class="na">nextLeader</span><span class="o">.</span><span class="na">handleRequest</span><span class="o">(</span><span class="n">request</span><span class="o">);</span>
			<span class="o">}</span>
		<span class="o">}</span>
	<span class="o">}</span>

<span class="o">}</span>

</code></pre></div></div>

<h4 id="总经理">总经理</h4>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">com.bjsxt.chainOfResp</span><span class="o">;</span>

<span class="cm">/**
 * 总经理
 * @author Administrator
 *
 */</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">GeneralManager</span> <span class="kd">extends</span> <span class="nc">Leader</span> <span class="o">{</span>

	<span class="kd">public</span> <span class="nf">GeneralManager</span><span class="o">(</span><span class="nc">String</span> <span class="n">name</span><span class="o">)</span> <span class="o">{</span>
		<span class="kd">super</span><span class="o">(</span><span class="n">name</span><span class="o">);</span>
	<span class="o">}</span>

	<span class="nd">@Override</span>
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">handleRequest</span><span class="o">(</span><span class="nc">LeaveRequest</span> <span class="n">request</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">if</span><span class="o">(</span><span class="n">request</span><span class="o">.</span><span class="na">getLeaveDays</span><span class="o">()&lt;</span><span class="mi">30</span><span class="o">){</span>
			<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"员工："</span><span class="o">+</span><span class="n">request</span><span class="o">.</span><span class="na">getEmpName</span><span class="o">()+</span><span class="s">"请假，天数："</span><span class="o">+</span><span class="n">request</span><span class="o">.</span><span class="na">getLeaveDays</span><span class="o">()+</span><span class="s">",理由："</span><span class="o">+</span><span class="n">request</span><span class="o">.</span><span class="na">getReason</span><span class="o">());</span>
			<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"总经理："</span><span class="o">+</span><span class="k">this</span><span class="o">.</span><span class="na">name</span><span class="o">+</span><span class="s">",审批通过！"</span><span class="o">);</span>
		<span class="o">}</span><span class="k">else</span><span class="o">{</span>
			<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"莫非"</span><span class="o">+</span><span class="n">request</span><span class="o">.</span><span class="na">getEmpName</span><span class="o">()+</span><span class="s">"想辞职，居然请假"</span><span class="o">+</span><span class="n">request</span><span class="o">.</span><span class="na">getLeaveDays</span><span class="o">()+</span><span class="s">"天！"</span><span class="o">);</span>
		<span class="o">}</span>
	<span class="o">}</span>

<span class="o">}</span>

</code></pre></div></div>

<h4 id="请假信息">请假信息</h4>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">com.bjsxt.chainOfResp</span><span class="o">;</span>

<span class="cm">/**
 * 封装请假的基本信息
 * @author Administrator
 *
 */</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">LeaveRequest</span> <span class="o">{</span>
	<span class="cm">/**
	 * 姓名
	 */</span>
	<span class="kd">private</span> <span class="nc">String</span> <span class="n">empName</span><span class="o">;</span>
	<span class="cm">/**
	 * 请假天数
	 */</span>
	<span class="kd">private</span> <span class="kt">int</span> <span class="n">leaveDays</span><span class="o">;</span>
	<span class="cm">/**
	 * 请假理由
	 */</span>
	<span class="kd">private</span> <span class="nc">String</span> <span class="n">reason</span><span class="o">;</span>
	
	
	<span class="kd">public</span> <span class="nf">LeaveRequest</span><span class="o">(</span><span class="nc">String</span> <span class="n">empName</span><span class="o">,</span> <span class="kt">int</span> <span class="n">leaveDays</span><span class="o">,</span> <span class="nc">String</span> <span class="n">reason</span><span class="o">)</span> <span class="o">{</span>
		<span class="kd">super</span><span class="o">();</span>
		<span class="k">this</span><span class="o">.</span><span class="na">empName</span> <span class="o">=</span> <span class="n">empName</span><span class="o">;</span>
		<span class="k">this</span><span class="o">.</span><span class="na">leaveDays</span> <span class="o">=</span> <span class="n">leaveDays</span><span class="o">;</span>
		<span class="k">this</span><span class="o">.</span><span class="na">reason</span> <span class="o">=</span> <span class="n">reason</span><span class="o">;</span>
	<span class="o">}</span>
	<span class="kd">public</span> <span class="nc">String</span> <span class="nf">getEmpName</span><span class="o">()</span> <span class="o">{</span>
		<span class="k">return</span> <span class="n">empName</span><span class="o">;</span>
	<span class="o">}</span>
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">setEmpName</span><span class="o">(</span><span class="nc">String</span> <span class="n">empName</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">this</span><span class="o">.</span><span class="na">empName</span> <span class="o">=</span> <span class="n">empName</span><span class="o">;</span>
	<span class="o">}</span>
	<span class="kd">public</span> <span class="kt">int</span> <span class="nf">getLeaveDays</span><span class="o">()</span> <span class="o">{</span>
		<span class="k">return</span> <span class="n">leaveDays</span><span class="o">;</span>
	<span class="o">}</span>
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">setLeaveDays</span><span class="o">(</span><span class="kt">int</span> <span class="n">leaveDays</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">this</span><span class="o">.</span><span class="na">leaveDays</span> <span class="o">=</span> <span class="n">leaveDays</span><span class="o">;</span>
	<span class="o">}</span>
	<span class="kd">public</span> <span class="nc">String</span> <span class="nf">getReason</span><span class="o">()</span> <span class="o">{</span>
		<span class="k">return</span> <span class="n">reason</span><span class="o">;</span>
	<span class="o">}</span>
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">setReason</span><span class="o">(</span><span class="nc">String</span> <span class="n">reason</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">this</span><span class="o">.</span><span class="na">reason</span> <span class="o">=</span> <span class="n">reason</span><span class="o">;</span>
	<span class="o">}</span> 
	
	
<span class="o">}</span>

</code></pre></div></div>

<h4 id="模拟请假">模拟请假</h4>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">com.bjsxt.chainOfResp</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Client</span> <span class="o">{</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
		<span class="nc">Leader</span> <span class="n">a</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Director</span><span class="o">(</span><span class="s">"张三"</span><span class="o">);</span>
		<span class="nc">Leader</span> <span class="n">b</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Manager</span><span class="o">(</span><span class="s">"李四"</span><span class="o">);</span>
		<span class="nc">Leader</span> <span class="n">b2</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ViceGeneralManager</span><span class="o">(</span><span class="s">"李小四"</span><span class="o">);</span>
		<span class="nc">Leader</span> <span class="n">c</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">GeneralManager</span><span class="o">(</span><span class="s">"王五"</span><span class="o">);</span>
		<span class="c1">//组织责任链对象的关系</span>
		<span class="n">a</span><span class="o">.</span><span class="na">setNextLeader</span><span class="o">(</span><span class="n">b</span><span class="o">);</span>
		<span class="n">b</span><span class="o">.</span><span class="na">setNextLeader</span><span class="o">(</span><span class="n">b2</span><span class="o">);</span>
		<span class="n">b2</span><span class="o">.</span><span class="na">setNextLeader</span><span class="o">(</span><span class="n">c</span><span class="o">);</span>
		
		<span class="c1">//开始请假操作</span>
		<span class="nc">LeaveRequest</span> <span class="n">req1</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">LeaveRequest</span><span class="o">(</span><span class="s">"TOM"</span><span class="o">,</span> <span class="mi">15</span><span class="o">,</span> <span class="s">"回英国老家探亲！"</span><span class="o">);</span>
		<span class="n">a</span><span class="o">.</span><span class="na">handleRequest</span><span class="o">(</span><span class="n">req1</span><span class="o">);</span>
		
	<span class="o">}</span>
<span class="o">}</span>

</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>员工：TOM请假，天数：15,理由：回英国老家探亲！
副总经理：李小四,审批通过！
</code></pre></div></div>

<h4 id="添加新对象">添加新对象</h4>

<ul>
  <li>由于责任链的创建完全在客户端，因此新增新的具体处理者对原有类库没有任何影响，只需添加新的类，然后在客户端调用时添加即可</li>
  <li>符合开闭原则</li>
</ul>

<h3 id="使用场景">使用场景</h3>

<ul>
  <li>Java中，异常机制就是一种责任链模式。一个try可以对应多个catch，当第一个catch不匹配类型，则自动跳到第二个catch</li>
  <li>Javascript语言中，事件的冒泡和捕获机制。Java语言中，事件的处理采用观察者模式</li>
  <li>Servlet开发中，过滤器的链式处理</li>
  <li>Struts2中，拦截器的调用也是典型的责任链模式</li>
</ul>
:ET