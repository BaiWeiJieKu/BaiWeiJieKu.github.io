I"_#<ul id="markdown-toc">
  <li><a href="#lambda" id="markdown-toc-lambda">Lambda</a>    <ul>
      <li><a href="#普通方法" id="markdown-toc-普通方法">普通方法</a></li>
    </ul>
  </li>
</ul>
<h2 id="lambda">Lambda</h2>

<ul>
  <li>假设一个情景： 找出满足条件的Hero</li>
</ul>

<h3 id="普通方法">普通方法</h3>

<ul>
  <li>使用一个普通方法，在for循环遍历中进行条件判断，筛选出满足条件的数据</li>
  <li><code class="language-plaintext highlighter-rouge">hp&gt;100 &amp;&amp; damage&lt;50</code></li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="kn">package</span> <span class="nn">charactor</span><span class="o">;</span>
    
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Hero</span> <span class="kd">implements</span> <span class="nc">Comparable</span><span class="o">&lt;</span><span class="nc">Hero</span><span class="o">&gt;{</span>
    <span class="kd">public</span> <span class="nc">String</span> <span class="n">name</span><span class="o">;</span> 
    <span class="kd">public</span> <span class="kt">float</span> <span class="n">hp</span><span class="o">;</span>
       
    <span class="kd">public</span> <span class="kt">int</span> <span class="n">damage</span><span class="o">;</span>
       
    <span class="kd">public</span> <span class="nf">Hero</span><span class="o">(){</span>
          
    <span class="o">}</span>
      
    <span class="kd">public</span> <span class="nf">Hero</span><span class="o">(</span><span class="nc">String</span> <span class="n">name</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">name</span> <span class="o">=</span><span class="n">name</span><span class="o">;</span>
  
    <span class="o">}</span>
      
    <span class="c1">//初始化name,hp,damage的构造方法</span>
    <span class="kd">public</span> <span class="nf">Hero</span><span class="o">(</span><span class="nc">String</span> <span class="n">name</span><span class="o">,</span><span class="kt">float</span> <span class="n">hp</span><span class="o">,</span> <span class="kt">int</span> <span class="n">damage</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">name</span> <span class="o">=</span><span class="n">name</span><span class="o">;</span>
        <span class="k">this</span><span class="o">.</span><span class="na">hp</span> <span class="o">=</span> <span class="n">hp</span><span class="o">;</span>
        <span class="k">this</span><span class="o">.</span><span class="na">damage</span> <span class="o">=</span> <span class="n">damage</span><span class="o">;</span>
    <span class="o">}</span>
  
    <span class="nd">@Override</span>
    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">compareTo</span><span class="o">(</span><span class="nc">Hero</span> <span class="n">anotherHero</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">if</span><span class="o">(</span><span class="n">damage</span><span class="o">&lt;</span><span class="n">anotherHero</span><span class="o">.</span><span class="na">damage</span><span class="o">)</span>
            <span class="k">return</span> <span class="mi">1</span><span class="o">;</span>  
        <span class="k">else</span>
            <span class="k">return</span> <span class="o">-</span><span class="mi">1</span><span class="o">;</span>
    <span class="o">}</span>
  
    <span class="nd">@Override</span>
    <span class="kd">public</span> <span class="nc">String</span> <span class="nf">toString</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="s">"Hero [name="</span> <span class="o">+</span> <span class="n">name</span> <span class="o">+</span> <span class="s">", hp="</span> <span class="o">+</span> <span class="n">hp</span> <span class="o">+</span> <span class="s">", damage="</span> <span class="o">+</span> <span class="n">damage</span> <span class="o">+</span> <span class="s">"]\r\n"</span><span class="o">;</span>
    <span class="o">}</span>
      
<span class="o">}</span>

</code></pre></div></div>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">lambda</span><span class="o">;</span>
 
<span class="kn">import</span> <span class="nn">java.util.ArrayList</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.List</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Random</span><span class="o">;</span>
 
<span class="kn">import</span> <span class="nn">charactor.Hero</span><span class="o">;</span>
 
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">TestLambda</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">Random</span> <span class="n">r</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Random</span><span class="o">();</span>
        <span class="nc">List</span><span class="o">&lt;</span><span class="nc">Hero</span><span class="o">&gt;</span> <span class="n">heros</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">Hero</span><span class="o">&gt;();</span>
        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">10</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="n">heros</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="nc">Hero</span><span class="o">(</span><span class="s">"hero "</span> <span class="o">+</span> <span class="n">i</span><span class="o">,</span> <span class="n">r</span><span class="o">.</span><span class="na">nextInt</span><span class="o">(</span><span class="mi">1000</span><span class="o">),</span> <span class="n">r</span><span class="o">.</span><span class="na">nextInt</span><span class="o">(</span><span class="mi">100</span><span class="o">)));</span>
        <span class="o">}</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"初始化后的集合："</span><span class="o">);</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">heros</span><span class="o">);</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"筛选出 hp&gt;100 &amp;&amp; damange&lt;50的英雄"</span><span class="o">);</span>
        <span class="n">filter</span><span class="o">(</span><span class="n">heros</span><span class="o">);</span>
    <span class="o">}</span>
 
    <span class="kd">private</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">filter</span><span class="o">(</span><span class="nc">List</span><span class="o">&lt;</span><span class="nc">Hero</span><span class="o">&gt;</span> <span class="n">heros</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">for</span> <span class="o">(</span><span class="nc">Hero</span> <span class="n">hero</span> <span class="o">:</span> <span class="n">heros</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">if</span><span class="o">(</span><span class="n">hero</span><span class="o">.</span><span class="na">hp</span><span class="o">&gt;</span><span class="mi">100</span> <span class="o">&amp;&amp;</span> <span class="n">hero</span><span class="o">.</span><span class="na">damage</span><span class="o">&lt;</span><span class="mi">50</span><span class="o">)</span>
                <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span><span class="n">hero</span><span class="o">);</span>
        <span class="o">}</span>
    <span class="o">}</span>
 
<span class="o">}</span>

</code></pre></div></div>

<p><img src="http://stepimagewm.how2j.cn/2551.png" alt="" /></p>
:ET