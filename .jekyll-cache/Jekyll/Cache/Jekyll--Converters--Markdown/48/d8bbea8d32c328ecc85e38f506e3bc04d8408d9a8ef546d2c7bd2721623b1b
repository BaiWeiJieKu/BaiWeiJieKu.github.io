I"ul<ul id="markdown-toc">
  <li><a href="#简介" id="markdown-toc-简介">简介</a>    <ul>
      <li><a href="#elastic-job" id="markdown-toc-elastic-job">Elastic-Job</a></li>
      <li><a href="#quartz" id="markdown-toc-quartz">Quartz</a></li>
    </ul>
  </li>
  <li><a href="#elastic-job-1" id="markdown-toc-elastic-job-1">Elastic-Job</a>    <ul>
      <li><a href="#simple作业" id="markdown-toc-simple作业">Simple作业</a></li>
      <li><a href="#dataflow" id="markdown-toc-dataflow">Dataflow</a></li>
      <li><a href="#script作业" id="markdown-toc-script作业">script作业</a></li>
      <li><a href="#spring整合作业" id="markdown-toc-spring整合作业">spring整合作业</a></li>
      <li><a href="#springboot整合作业" id="markdown-toc-springboot整合作业">springboot整合作业</a></li>
      <li><a href="#定时轮询取消订单" id="markdown-toc-定时轮询取消订单">定时轮询取消订单</a></li>
      <li><a href="#第三方订单导入案例" id="markdown-toc-第三方订单导入案例">第三方订单导入案例</a></li>
      <li><a href="#自定义分片策略" id="markdown-toc-自定义分片策略">自定义分片策略</a></li>
      <li><a href="#事件追踪" id="markdown-toc-事件追踪">事件追踪</a></li>
      <li><a href="#作业监听器" id="markdown-toc-作业监听器">作业监听器</a></li>
    </ul>
  </li>
</ul>
<h3 id="简介">简介</h3>

<p><a href="https://gitee.com/shanyuanjushi/javaJobDemo">项目源码</a></p>

<h4 id="elastic-job">Elastic-Job</h4>

<ul>
  <li>支持集群，支持分布式（将一个任务拆分成多个独立的任务项，由分布式服务器分别执行某一个或几个分片项），不支持动态添加任务</li>
  <li>分布式调度解决方案，使用jar包提供协调服务</li>
  <li>外部依赖ZooKeeper（作为注册中心）进行集群</li>
  <li>zookeeper可视化工具：<strong>zooinspector</strong></li>
  <li>使用分片概念：一个任务拆分为多个独立的任务项，每个服务获得一个或几个分片项（用两个服务器遍历数据库的某张表，每个服务器执行任务的一般，A服务器获取id为奇数的数据，B服务器获取id为偶数的数据）</li>
  <li>三种任务类型：Simple，Dataflow，Script</li>
  <li>三种整合方式：javaAPI，spring，<strong>springboot</strong></li>
  <li>高级知识：自定义分片，作业监听器，事件追踪</li>
  <li>实战应用：订单自动取消，第三方订单抓取</li>
</ul>

<h4 id="quartz">Quartz</h4>

<ul>
  <li>
    <p>支持集群，伪分布式，支持动态添加任务</p>
  </li>
  <li>基础知识：Job和JobDetail，Trigger触发器，<strong>Cron表达式</strong></li>
  <li>三种整合方式：javaAPI，spring，springboot</li>
  <li>高级知识：Job监听器，Trigger监听器，Scheduler监听器，<strong>Quartz集群</strong></li>
  <li>实战应用：按小时统计订单信息</li>
</ul>

<h3 id="elastic-job-1">Elastic-Job</h3>

<h4 id="simple作业">Simple作业</h4>

<ul>
  <li>意为定时任务的简单实现，只需要实现execute方法</li>
  <li>提供了弹性扩容和分片功能</li>
  <li>操作步骤：
    <ul>
      <li>实现SimpleJob接口，实现execute方法</li>
      <li>定义作业核心配置（作业名称，定时策略，分片总数）</li>
      <li>定义作业类型（Simple，Dataflow，Script，实现类的全包名）</li>
      <li>定义Lite作业根配置（overwrite属性的重要性）</li>
      <li>配置注册中心ZooKeeper（可以单机，可以集群）。包括ip，端口，命名空间</li>
      <li>编写Main函数，启动定时任务</li>
      <li>新增启动配置，修改端口，启动定时任务第二个实例</li>
      <li>控制台观察两个实例打印出的分片项</li>
    </ul>
  </li>
</ul>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;dependency&gt;</span>
      <span class="nt">&lt;groupId&gt;</span>com.dangdang<span class="nt">&lt;/groupId&gt;</span>
      <span class="nt">&lt;artifactId&gt;</span>elastic-job-lite-core<span class="nt">&lt;/artifactId&gt;</span>
      <span class="nt">&lt;version&gt;</span>2.1.5<span class="nt">&lt;/version&gt;</span>
<span class="nt">&lt;/dependency&gt;</span>
</code></pre></div></div>

<ul>
  <li>job</li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">com.dangdang.ddframe.job.api.ShardingContext</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.dangdang.ddframe.job.api.simple.SimpleJob</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.time.LocalTime</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">MySimpleJob</span> <span class="kd">implements</span> <span class="nc">SimpleJob</span> <span class="o">{</span>
    <span class="nd">@Override</span>
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">execute</span><span class="o">(</span><span class="nc">ShardingContext</span> <span class="n">shardingContext</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">LocalTime</span> <span class="n">time</span> <span class="o">=</span> <span class="nc">LocalTime</span><span class="o">.</span><span class="na">now</span><span class="o">();</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">time</span><span class="o">+</span><span class="s">",我是分片项："</span><span class="o">+</span><span class="n">shardingContext</span><span class="o">.</span><span class="na">getShardingItem</span><span class="o">()+</span>
                <span class="s">",总分片项："</span><span class="o">+</span><span class="n">shardingContext</span><span class="o">.</span><span class="na">getShardingTotalCount</span><span class="o">()+</span><span class="s">",taskId"</span><span class="o">+</span>
                <span class="n">shardingContext</span><span class="o">.</span><span class="na">getTaskId</span><span class="o">());</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<ul>
  <li>主函数</li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cm">/**
 * Hello world!
 *
 */</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">App</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span> <span class="nc">String</span><span class="o">[]</span> <span class="n">args</span> <span class="o">)</span>    <span class="o">{</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span> <span class="s">"Hello World!"</span> <span class="o">);</span>
        <span class="k">new</span> <span class="nf">JobScheduler</span><span class="o">(</span><span class="n">zkCenter</span><span class="o">(),</span><span class="n">configuration</span><span class="o">()).</span><span class="na">init</span><span class="o">();</span>
    <span class="o">}</span>

    <span class="cm">/**
     * zookeeper注册中心
     * @return
     */</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="nc">CoordinatorRegistryCenter</span> <span class="nf">zkCenter</span><span class="o">(){</span>
        <span class="nc">ZookeeperConfiguration</span> <span class="n">zc</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ZookeeperConfiguration</span><span class="o">(</span><span class="s">"localhost:2181"</span><span class="o">,</span>
                <span class="s">"java-simple-job"</span><span class="o">);</span>

        <span class="nc">ZookeeperRegistryCenter</span> <span class="n">crc</span><span class="o">=</span><span class="k">new</span> <span class="nc">ZookeeperRegistryCenter</span><span class="o">(</span><span class="n">zc</span><span class="o">);</span>
        <span class="c1">//注册中心初始化</span>
        <span class="n">crc</span><span class="o">.</span><span class="na">init</span><span class="o">();</span>
        <span class="k">return</span> <span class="n">crc</span><span class="o">;</span>
    <span class="o">}</span>


    <span class="cm">/**
     * job配置
     * @return
     */</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="nc">LiteJobConfiguration</span> <span class="nf">configuration</span><span class="o">()</span> <span class="o">{</span>
        <span class="c1">//job核心配置，每5秒执行一次任务，2个分片</span>
        <span class="nc">JobCoreConfiguration</span> <span class="n">jcc</span> <span class="o">=</span> <span class="nc">JobCoreConfiguration</span>
                <span class="o">.</span><span class="na">newBuilder</span><span class="o">(</span><span class="s">"mySimpleJob"</span><span class="o">,</span><span class="s">"0/5 * * * * ?"</span><span class="o">,</span><span class="mi">2</span><span class="o">)</span>
                <span class="o">.</span><span class="na">build</span><span class="o">();</span>
        <span class="c1">//job类型配置，传入job类的全包名</span>
        <span class="nc">SimpleJobConfiguration</span> <span class="n">jtc</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">SimpleJobConfiguration</span><span class="o">(</span><span class="n">jcc</span><span class="o">,</span>
                <span class="nc">MySimpleJob</span><span class="o">.</span><span class="na">class</span><span class="o">.</span><span class="na">getCanonicalName</span><span class="o">());</span>

        <span class="c1">//job根的配置（LiteJobConfiguration）</span>
        <span class="nc">LiteJobConfiguration</span> <span class="n">ljc</span> <span class="o">=</span> <span class="nc">LiteJobConfiguration</span>
                <span class="o">.</span><span class="na">newBuilder</span><span class="o">(</span><span class="n">jtc</span><span class="o">)</span>
                <span class="o">.</span><span class="na">overwrite</span><span class="o">(</span><span class="kc">true</span><span class="o">)</span>
                <span class="o">.</span><span class="na">build</span><span class="o">();</span>

        <span class="k">return</span> <span class="n">ljc</span><span class="o">;</span>
    <span class="o">}</span>
 
<span class="o">}</span>
</code></pre></div></div>

<ul>
  <li>先启动一次Main函数类，发现打印结果为：我是分片项0，总分片项2，我是分片项1，总分片项2</li>
  <li>再启动一个Main函数类，发现第一个控制台输出：我是分片项0，总分片项2。第二个控制台输出：我是分片项1，总分片项2</li>
  <li>验证了分片处理</li>
</ul>

<h4 id="dataflow">Dataflow</h4>

<ul>
  <li>Dataflow类型用于处理流式作业，分为数据抓取（fetchData）和数据处理（processData）</li>
  <li>应用场景：适用于不间断的数据处理，比如第三方订单的抓取</li>
  <li>执行流程：
    <ul>
      <li>定时任务根据规则触发</li>
      <li>抓取数据</li>
      <li>处理数据，完成后再次抓取</li>
      <li>若数据存在，继续处理；若不存在，则本次任务结束</li>
      <li>等待任务规则，下次触发</li>
    </ul>
  </li>
  <li>实现DataflowJob接口，注意<code class="language-plaintext highlighter-rouge">DataflowJob&lt;T&gt;</code>泛型，泛型规定了抓取数据的返回类型</li>
  <li>案例：处理100个订单，分片处理，每次处理10个订单</li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">//模拟订单</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Order</span> <span class="o">{</span>
    <span class="kd">private</span> <span class="nc">Integer</span> <span class="n">orderId</span><span class="o">;</span>
    <span class="c1">//0：未处理；1：已处理</span>
    <span class="kd">private</span> <span class="nc">Integer</span> <span class="n">status</span><span class="o">;</span>

    <span class="kd">public</span> <span class="nc">Integer</span> <span class="nf">getOrderId</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">orderId</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setOrderId</span><span class="o">(</span><span class="nc">Integer</span> <span class="n">orderId</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">orderId</span> <span class="o">=</span> <span class="n">orderId</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="nc">Integer</span> <span class="nf">getStatus</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">status</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setStatus</span><span class="o">(</span><span class="nc">Integer</span> <span class="n">status</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">status</span> <span class="o">=</span> <span class="n">status</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="nd">@Override</span>
    <span class="kd">public</span> <span class="nc">String</span> <span class="nf">toString</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="s">"Order{"</span> <span class="o">+</span>
                <span class="s">"orderId="</span> <span class="o">+</span> <span class="n">orderId</span> <span class="o">+</span>
                <span class="s">", status="</span> <span class="o">+</span> <span class="n">status</span> <span class="o">+</span>
                <span class="sc">'}'</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<ul>
  <li>流式任务</li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">com.dangdang.ddframe.job.api.ShardingContext</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.dangdang.ddframe.job.api.dataflow.DataflowJob</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.example.model.Order</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.time.LocalTime</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.ArrayList</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.List</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">static</span> <span class="n">java</span><span class="o">.</span><span class="na">util</span><span class="o">.</span><span class="na">stream</span><span class="o">.</span><span class="na">Collectors</span><span class="o">.</span><span class="na">toList</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">MyDataflowJob</span> <span class="kd">implements</span> <span class="nc">DataflowJob</span><span class="o">&lt;</span><span class="nc">Order</span><span class="o">&gt;</span> <span class="o">{</span>

    <span class="kd">private</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">Order</span><span class="o">&gt;</span> <span class="n">orders</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;&gt;();</span>
	<span class="c1">//初始化100个订单</span>
    <span class="o">{</span>
        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="mi">100</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
            <span class="nc">Order</span> <span class="n">order</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Order</span><span class="o">();</span>
            <span class="n">order</span><span class="o">.</span><span class="na">setOrderId</span><span class="o">(</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="o">);</span>
            <span class="c1">//未处理</span>
            <span class="n">order</span><span class="o">.</span><span class="na">setStatus</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
            <span class="n">orders</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">order</span><span class="o">);</span>
        <span class="o">}</span>
    <span class="o">}</span>

	<span class="c1">//抓取数据</span>
    <span class="nd">@Override</span>
    <span class="kd">public</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">Order</span><span class="o">&gt;</span> <span class="nf">fetchData</span><span class="o">(</span><span class="nc">ShardingContext</span> <span class="n">shardingContext</span><span class="o">)</span> <span class="o">{</span>
        <span class="c1">//订单号 % 分片总数 == 当前分片项</span>
        <span class="nc">List</span><span class="o">&lt;</span><span class="nc">Order</span><span class="o">&gt;</span> <span class="n">orderList</span> <span class="o">=</span> <span class="n">orders</span><span class="o">.</span><span class="na">stream</span><span class="o">().</span><span class="na">filter</span><span class="o">(</span><span class="n">o</span> <span class="o">-&gt;</span> <span class="n">o</span><span class="o">.</span><span class="na">getStatus</span><span class="o">()</span> <span class="o">==</span> <span class="mi">0</span><span class="o">)</span>
                <span class="o">.</span><span class="na">filter</span><span class="o">(</span><span class="n">o</span> <span class="o">-&gt;</span> <span class="n">o</span><span class="o">.</span><span class="na">getOrderId</span><span class="o">()</span> <span class="o">%</span> <span class="n">shardingContext</span><span class="o">.</span><span class="na">getShardingTotalCount</span><span class="o">()</span> <span class="o">==</span> <span class="n">shardingContext</span><span class="o">.</span><span class="na">getShardingItem</span><span class="o">())</span>
                <span class="o">.</span><span class="na">collect</span><span class="o">(</span><span class="n">toList</span><span class="o">());</span>

        <span class="nc">List</span><span class="o">&lt;</span><span class="nc">Order</span><span class="o">&gt;</span> <span class="n">subList</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
        <span class="k">if</span> <span class="o">(</span><span class="n">orderList</span><span class="o">!=</span><span class="kc">null</span> <span class="o">&amp;&amp;</span> <span class="n">orderList</span><span class="o">.</span><span class="na">size</span><span class="o">()&gt;</span><span class="mi">0</span><span class="o">){</span>
            <span class="c1">//如果list不为空，每次抓取10条</span>
            <span class="n">subList</span>  <span class="o">=</span> <span class="n">orderList</span><span class="o">.</span><span class="na">subList</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="mi">10</span><span class="o">);</span>

        <span class="o">}</span>

        <span class="k">try</span> <span class="o">{</span>
            <span class="c1">//模拟数据处理</span>
            <span class="nc">Thread</span><span class="o">.</span><span class="na">sleep</span><span class="o">(</span><span class="mi">3000</span><span class="o">);</span>
        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="nc">InterruptedException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
        <span class="o">}</span>

        <span class="nc">LocalTime</span> <span class="n">time</span> <span class="o">=</span> <span class="nc">LocalTime</span><span class="o">.</span><span class="na">now</span><span class="o">();</span>

        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">time</span><span class="o">+</span><span class="s">",我是分片项："</span><span class="o">+</span><span class="n">shardingContext</span><span class="o">.</span><span class="na">getShardingItem</span><span class="o">()+</span><span class="s">",我抓取的数据是："</span><span class="o">+</span><span class="n">subList</span><span class="o">);</span>

        <span class="k">return</span> <span class="n">subList</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="c1">//数据处理</span>
    <span class="nd">@Override</span>
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">processData</span><span class="o">(</span><span class="nc">ShardingContext</span> <span class="n">shardingContext</span><span class="o">,</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">Order</span><span class="o">&gt;</span> <span class="n">data</span><span class="o">)</span> <span class="o">{</span>
        <span class="c1">//修改订单状态为已处理</span>
        <span class="n">data</span><span class="o">.</span><span class="na">forEach</span><span class="o">(</span><span class="n">o</span><span class="o">-&gt;</span><span class="n">o</span><span class="o">.</span><span class="na">setStatus</span><span class="o">(</span><span class="mi">1</span><span class="o">));</span>
        <span class="k">try</span> <span class="o">{</span>
            <span class="nc">Thread</span><span class="o">.</span><span class="na">sleep</span><span class="o">(</span><span class="mi">5000</span><span class="o">);</span>
        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="nc">InterruptedException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
        <span class="o">}</span>
        <span class="nc">LocalTime</span> <span class="n">time</span> <span class="o">=</span> <span class="nc">LocalTime</span><span class="o">.</span><span class="na">now</span><span class="o">();</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">time</span><span class="o">+</span><span class="s">",我是分片项："</span><span class="o">+</span><span class="n">shardingContext</span><span class="o">.</span><span class="na">getShardingItem</span><span class="o">()+</span><span class="s">",我正在处理数据！"</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<ul>
  <li>主函数类</li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="kd">class</span> <span class="nc">App</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span> <span class="nc">String</span><span class="o">[]</span> <span class="n">args</span> <span class="o">)</span>    <span class="o">{</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span> <span class="s">"Hello World!"</span> <span class="o">);</span>
        <span class="k">new</span> <span class="nf">JobScheduler</span><span class="o">(</span><span class="n">zkCenter</span><span class="o">(),</span><span class="n">configurationDataflow</span><span class="o">()).</span><span class="na">init</span><span class="o">();</span>
    <span class="o">}</span>
    
    <span class="cm">/**
     * zookeeper注册中心
     * @return
     */</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="nc">CoordinatorRegistryCenter</span> <span class="nf">zkCenter</span><span class="o">(){</span>
        <span class="nc">ZookeeperConfiguration</span> <span class="n">zc</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ZookeeperConfiguration</span><span class="o">(</span><span class="s">"localhost:2181"</span><span class="o">,</span>
                <span class="s">"java-simple-job"</span><span class="o">);</span>

        <span class="nc">ZookeeperRegistryCenter</span> <span class="n">crc</span><span class="o">=</span><span class="k">new</span> <span class="nc">ZookeeperRegistryCenter</span><span class="o">(</span><span class="n">zc</span><span class="o">);</span>
        <span class="c1">//注册中心初始化</span>
        <span class="n">crc</span><span class="o">.</span><span class="na">init</span><span class="o">();</span>
        <span class="k">return</span> <span class="n">crc</span><span class="o">;</span>
    <span class="o">}</span>
    
    <span class="kd">public</span> <span class="kd">static</span> <span class="nc">LiteJobConfiguration</span> <span class="nf">configurationDataflow</span><span class="o">()</span> <span class="o">{</span>
        <span class="c1">//job核心配置</span>
        <span class="kt">var</span> <span class="n">jcc</span> <span class="o">=</span> <span class="nc">JobCoreConfiguration</span>
                <span class="o">.</span><span class="na">newBuilder</span><span class="o">(</span><span class="s">"myDataflowJob"</span><span class="o">,</span><span class="s">"0/10 * * * * ?"</span><span class="o">,</span><span class="mi">2</span><span class="o">)</span>
                <span class="o">.</span><span class="na">build</span><span class="o">();</span>

        <span class="c1">//job类型配置,重复执行</span>
        <span class="kt">var</span> <span class="n">jtc</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">DataflowJobConfiguration</span><span class="o">(</span><span class="n">jcc</span><span class="o">,</span>
                <span class="nc">MyDataflowJob</span><span class="o">.</span><span class="na">class</span><span class="o">.</span><span class="na">getCanonicalName</span><span class="o">(),</span><span class="kc">true</span><span class="o">);</span>

        <span class="c1">//job根的配置（LiteJobConfiguration）</span>
        <span class="kt">var</span> <span class="n">ljc</span> <span class="o">=</span> <span class="nc">LiteJobConfiguration</span>
                <span class="o">.</span><span class="na">newBuilder</span><span class="o">(</span><span class="n">jtc</span><span class="o">)</span>
                <span class="o">.</span><span class="na">overwrite</span><span class="o">(</span><span class="kc">true</span><span class="o">)</span>
                <span class="o">.</span><span class="na">build</span><span class="o">();</span>

        <span class="k">return</span> <span class="n">ljc</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<h4 id="script作业">script作业</h4>

<ul>
  <li>脚本类型作业</li>
  <li>支持shell，Python，Perl等</li>
  <li>无需编码，配置任务时，添加可执行脚本的命令，作业信息作为最后一个参数自动追加</li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="kd">class</span> <span class="nc">App</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span> <span class="nc">String</span><span class="o">[]</span> <span class="n">args</span> <span class="o">)</span>    <span class="o">{</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span> <span class="s">"Hello World!"</span> <span class="o">);</span>
        <span class="k">new</span> <span class="nf">JobScheduler</span><span class="o">(</span><span class="n">zkCenter</span><span class="o">(),</span><span class="n">configurationScript</span><span class="o">()).</span><span class="na">init</span><span class="o">();</span>
    <span class="o">}</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="nc">LiteJobConfiguration</span> <span class="nf">configurationScript</span><span class="o">()</span> <span class="o">{</span>
        <span class="c1">//job核心配置</span>
        <span class="kt">var</span> <span class="n">jcc</span> <span class="o">=</span> <span class="nc">JobCoreConfiguration</span>
                <span class="o">.</span><span class="na">newBuilder</span><span class="o">(</span><span class="s">"myScriptJob"</span><span class="o">,</span><span class="s">"0/10 * * * * ?"</span><span class="o">,</span><span class="mi">2</span><span class="o">)</span>
                <span class="o">.</span><span class="na">misfire</span><span class="o">(</span><span class="kc">false</span><span class="o">)</span>
                <span class="o">.</span><span class="na">build</span><span class="o">();</span>

        <span class="c1">//job类型配置</span>
        <span class="kt">var</span> <span class="n">jtc</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ScriptJobConfiguration</span><span class="o">(</span><span class="n">jcc</span><span class="o">,</span><span class="s">"d:/test.cmd"</span><span class="o">);</span>

        <span class="c1">//job根的配置（LiteJobConfiguration）</span>
        <span class="kt">var</span> <span class="n">ljc</span> <span class="o">=</span> <span class="nc">LiteJobConfiguration</span>
                <span class="o">.</span><span class="na">newBuilder</span><span class="o">(</span><span class="n">jtc</span><span class="o">)</span>
                <span class="o">.</span><span class="na">overwrite</span><span class="o">(</span><span class="kc">true</span><span class="o">)</span>
                <span class="o">.</span><span class="na">build</span><span class="o">();</span>

        <span class="k">return</span> <span class="n">ljc</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<h4 id="spring整合作业">spring整合作业</h4>

<ul>
  <li>使用spring的schema整合作业</li>
</ul>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;properties&gt;</span>
    <span class="nt">&lt;project.build.sourceEncoding&gt;</span>UTF-8<span class="nt">&lt;/project.build.sourceEncoding&gt;</span>
    <span class="nt">&lt;maven.compiler.source&gt;</span>8<span class="nt">&lt;/maven.compiler.source&gt;</span>
    <span class="nt">&lt;maven.compiler.target&gt;</span>8<span class="nt">&lt;/maven.compiler.target&gt;</span>
    <span class="nt">&lt;spring.version&gt;</span>5.1.5.RELEASE<span class="nt">&lt;/spring.version&gt;</span>
    <span class="nt">&lt;elasticjob.version&gt;</span>2.1.5<span class="nt">&lt;/elasticjob.version&gt;</span>
  <span class="nt">&lt;/properties&gt;</span>

  <span class="nt">&lt;dependencies&gt;</span>
    <span class="nt">&lt;dependency&gt;</span>
      <span class="nt">&lt;groupId&gt;</span>junit<span class="nt">&lt;/groupId&gt;</span>
      <span class="nt">&lt;artifactId&gt;</span>junit<span class="nt">&lt;/artifactId&gt;</span>
      <span class="nt">&lt;version&gt;</span>4.11<span class="nt">&lt;/version&gt;</span>
      <span class="nt">&lt;scope&gt;</span>test<span class="nt">&lt;/scope&gt;</span>
    <span class="nt">&lt;/dependency&gt;</span>
    <span class="nt">&lt;dependency&gt;</span>
      <span class="nt">&lt;groupId&gt;</span>org.springframework<span class="nt">&lt;/groupId&gt;</span>
      <span class="nt">&lt;artifactId&gt;</span>spring-context<span class="nt">&lt;/artifactId&gt;</span>
      <span class="nt">&lt;version&gt;</span>${spring.version}<span class="nt">&lt;/version&gt;</span>
    <span class="nt">&lt;/dependency&gt;</span>
    <span class="nt">&lt;dependency&gt;</span>
      <span class="nt">&lt;groupId&gt;</span>org.springframework<span class="nt">&lt;/groupId&gt;</span>
      <span class="nt">&lt;artifactId&gt;</span>spring-web<span class="nt">&lt;/artifactId&gt;</span>
      <span class="nt">&lt;version&gt;</span>${spring.version}<span class="nt">&lt;/version&gt;</span>
    <span class="nt">&lt;/dependency&gt;</span>
    <span class="nt">&lt;dependency&gt;</span>
      <span class="nt">&lt;groupId&gt;</span>com.dangdang<span class="nt">&lt;/groupId&gt;</span>
      <span class="nt">&lt;artifactId&gt;</span>elastic-job-lite-core<span class="nt">&lt;/artifactId&gt;</span>
      <span class="nt">&lt;version&gt;</span>${elasticjob.version}<span class="nt">&lt;/version&gt;</span>
    <span class="nt">&lt;/dependency&gt;</span>
    <span class="nt">&lt;dependency&gt;</span>
      <span class="nt">&lt;groupId&gt;</span>com.dangdang<span class="nt">&lt;/groupId&gt;</span>
      <span class="nt">&lt;artifactId&gt;</span>elastic-job-lite-spring<span class="nt">&lt;/artifactId&gt;</span>
      <span class="nt">&lt;version&gt;</span>${elasticjob.version}<span class="nt">&lt;/version&gt;</span>
    <span class="nt">&lt;/dependency&gt;</span>
    <span class="nt">&lt;dependency&gt;</span>
      <span class="nt">&lt;groupId&gt;</span>org.projectlombok<span class="nt">&lt;/groupId&gt;</span>
      <span class="nt">&lt;artifactId&gt;</span>lombok<span class="nt">&lt;/artifactId&gt;</span>
      <span class="nt">&lt;version&gt;</span>1.18.6<span class="nt">&lt;/version&gt;</span>
      <span class="nt">&lt;scope&gt;</span>provided<span class="nt">&lt;/scope&gt;</span>
    <span class="nt">&lt;/dependency&gt;</span>
    <span class="nt">&lt;dependency&gt;</span>
      <span class="nt">&lt;groupId&gt;</span>org.slf4j<span class="nt">&lt;/groupId&gt;</span>
      <span class="nt">&lt;artifactId&gt;</span>slf4j-log4j12<span class="nt">&lt;/artifactId&gt;</span>
      <span class="nt">&lt;version&gt;</span>1.7.26<span class="nt">&lt;/version&gt;</span>
    <span class="nt">&lt;/dependency&gt;</span>
    <span class="nt">&lt;dependency&gt;</span>
      <span class="nt">&lt;groupId&gt;</span>org.apache.commons<span class="nt">&lt;/groupId&gt;</span>
      <span class="nt">&lt;artifactId&gt;</span>commons-dbcp2<span class="nt">&lt;/artifactId&gt;</span>
      <span class="nt">&lt;version&gt;</span>2.6.0<span class="nt">&lt;/version&gt;</span>
    <span class="nt">&lt;/dependency&gt;</span>
    <span class="nt">&lt;dependency&gt;</span>
      <span class="nt">&lt;groupId&gt;</span>org.quartz-scheduler<span class="nt">&lt;/groupId&gt;</span>
      <span class="nt">&lt;artifactId&gt;</span>quartz<span class="nt">&lt;/artifactId&gt;</span>
      <span class="nt">&lt;version&gt;</span>2.3.1<span class="nt">&lt;/version&gt;</span>
    <span class="nt">&lt;/dependency&gt;</span>
  <span class="nt">&lt;/dependencies&gt;</span>
</code></pre></div></div>

<ul>
  <li>在web.xml中配置listener，监听spring容器</li>
</ul>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;!DOCTYPE web-app PUBLIC
 "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
 "http://java.sun.com/dtd/web-app_2_3.dtd" &gt;</span>

<span class="nt">&lt;web-app&gt;</span>
  <span class="nt">&lt;display-name&gt;</span>spring-elasticjob<span class="nt">&lt;/display-name&gt;</span>
  <span class="nt">&lt;context-param&gt;</span>
    <span class="nt">&lt;param-name&gt;</span>contextConfigLocation<span class="nt">&lt;/param-name&gt;</span>
    <span class="nt">&lt;param-value&gt;</span>classpath*:spring-config.xml<span class="nt">&lt;/param-value&gt;</span>
  <span class="nt">&lt;/context-param&gt;</span>

  <span class="nt">&lt;listener&gt;</span>
    <span class="nt">&lt;listener-class&gt;</span>org.springframework.web.context.ContextLoaderListener<span class="nt">&lt;/listener-class&gt;</span>
  <span class="nt">&lt;/listener&gt;</span>

<span class="nt">&lt;/web-app&gt;</span>

</code></pre></div></div>

<ul>
  <li>编辑作业</li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nd">@Slf4j</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">MySimpleJob</span> <span class="kd">implements</span> <span class="nc">SimpleJob</span> <span class="o">{</span>
    <span class="nd">@Override</span>
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">execute</span><span class="o">(</span><span class="nc">ShardingContext</span> <span class="n">shardingContext</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">log</span><span class="o">.</span><span class="na">info</span><span class="o">(</span><span class="s">"我是分片项："</span><span class="o">+</span><span class="n">shardingContext</span><span class="o">.</span><span class="na">getShardingItem</span><span class="o">());</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="kd">class</span> <span class="nc">MyDataflowJob</span> <span class="kd">implements</span> <span class="nc">DataflowJob</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;</span> <span class="o">{</span>

    <span class="kd">private</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;</span> <span class="n">list</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;&gt;();</span>

    <span class="o">{</span>
        <span class="n">list</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
        <span class="n">list</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="mi">1</span><span class="o">);</span>
        <span class="n">list</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="mi">2</span><span class="o">);</span>
        <span class="n">list</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="mi">3</span><span class="o">);</span>
        <span class="n">list</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="mi">4</span><span class="o">);</span>
        <span class="n">list</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="mi">5</span><span class="o">);</span>
        <span class="n">list</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="mi">6</span><span class="o">);</span>
        <span class="n">list</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="mi">7</span><span class="o">);</span>
        <span class="n">list</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="mi">8</span><span class="o">);</span>
        <span class="n">list</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="mi">9</span><span class="o">);</span>

    <span class="o">}</span>

    <span class="nd">@Override</span>
    <span class="kd">public</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;</span> <span class="nf">fetchData</span><span class="o">(</span><span class="nc">ShardingContext</span> <span class="n">shardingContext</span><span class="o">)</span> <span class="o">{</span>
        <span class="c1">//数字 % 分片总数 == 当前分片项</span>
        <span class="nc">List</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;</span> <span class="n">rtnList</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;&gt;();</span>
        <span class="k">for</span> <span class="o">(</span><span class="nc">Integer</span> <span class="n">index</span> <span class="o">:</span> <span class="n">list</span><span class="o">){</span>
            <span class="k">if</span> <span class="o">(</span><span class="n">index</span> <span class="o">%</span> <span class="n">shardingContext</span><span class="o">.</span><span class="na">getShardingTotalCount</span><span class="o">()</span> <span class="o">==</span> <span class="n">shardingContext</span><span class="o">.</span><span class="na">getShardingItem</span><span class="o">()){</span>
                <span class="n">rtnList</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">index</span><span class="o">);</span>
                <span class="k">break</span><span class="o">;</span>
            <span class="o">}</span>
        <span class="o">}</span>
        <span class="k">try</span> <span class="o">{</span>
            <span class="nc">Thread</span><span class="o">.</span><span class="na">sleep</span><span class="o">(</span><span class="mi">3000</span><span class="o">);</span>
        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="nc">InterruptedException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
        <span class="o">}</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"我是分片项："</span><span class="o">+</span><span class="n">shardingContext</span><span class="o">.</span><span class="na">getShardingItem</span><span class="o">()+</span><span class="s">"，我获取的数据是："</span><span class="o">+</span><span class="n">rtnList</span><span class="o">);</span>

        <span class="k">return</span> <span class="n">rtnList</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="nd">@Override</span>
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">processData</span><span class="o">(</span><span class="nc">ShardingContext</span> <span class="n">shardingContext</span><span class="o">,</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;</span> <span class="n">data</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">list</span><span class="o">.</span><span class="na">removeAll</span><span class="o">(</span><span class="n">data</span><span class="o">);</span>
        <span class="k">try</span> <span class="o">{</span>
            <span class="nc">Thread</span><span class="o">.</span><span class="na">sleep</span><span class="o">(</span><span class="mi">5000</span><span class="o">);</span>
        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="nc">InterruptedException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
        <span class="o">}</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"我是分片项："</span><span class="o">+</span><span class="n">shardingContext</span><span class="o">.</span><span class="na">getShardingItem</span><span class="o">()+</span><span class="s">"，我移除数据是："</span><span class="o">+</span><span class="n">data</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<ul>
  <li>在xml中配置zookeeper注册中心，配置作业</li>
</ul>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span>
<span class="nt">&lt;beans</span> <span class="na">xmlns=</span><span class="s">"http://www.springframework.org/schema/beans"</span>
       <span class="na">xmlns:xsi=</span><span class="s">"http://www.w3.org/2001/XMLSchema-instance"</span> <span class="na">xmlns:reg=</span><span class="s">"http://www.dangdang.com/schema/ddframe/reg"</span>
       <span class="na">xmlns:job=</span><span class="s">"http://www.dangdang.com/schema/ddframe/job"</span>
       <span class="na">xsi:schemaLocation=</span><span class="s">"http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.dangdang.com/schema/ddframe/reg
            http://www.dangdang.com/schema/ddframe/reg/reg.xsd
            http://www.dangdang.com/schema/ddframe/job
            http://www.dangdang.com/schema/ddframe/job/job.xsd
"</span><span class="nt">&gt;</span>
    <span class="c">&lt;!--配置数据源--&gt;</span>
    <span class="nt">&lt;bean</span> <span class="na">id=</span><span class="s">"dataSource"</span> <span class="na">class=</span><span class="s">"org.apache.commons.dbcp2.BasicDataSource"</span><span class="nt">&gt;</span>
        <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">"username"</span> <span class="na">value=</span><span class="s">"root"</span><span class="nt">/&gt;</span>
        <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">"password"</span> <span class="na">value=</span><span class="s">"123456"</span><span class="nt">/&gt;</span>
        <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">"url"</span> <span class="na">value=</span><span class="s">"jdbc:mysql://localhost:3306/dataflow?serverTimezone=Asia/Shanghai&amp;amp;useSSL=false"</span><span class="nt">/&gt;</span>
    <span class="nt">&lt;/bean&gt;</span>



    <span class="c">&lt;!--注册中心配置--&gt;</span>
    <span class="nt">&lt;reg:zookeeper</span> <span class="na">server-lists=</span><span class="s">"localhost:2181"</span> <span class="na">base-sleep-time-milliseconds=</span><span class="s">""</span> <span class="na">namespace=</span><span class="s">"spring-elasticjob"</span> <span class="na">id=</span><span class="s">"zkCenter"</span><span class="nt">/&gt;</span>

    <span class="c">&lt;!--simple作业配置--&gt;</span>
    <span class="c">&lt;!--&lt;job:simple id="mySimpleJob" registry-center-ref="zkCenter" cron="0/10 * * * * ?" sharding-total-count="2"--&gt;</span>
                <span class="c">&lt;!--class="com.example.job.MySimpleJob" overwrite="true"/&gt;--&gt;</span>

    <span class="c">&lt;!--Dataflow作业--&gt;</span>
    <span class="c">&lt;!--event-trace-rdb-data-source事件追踪配置--&gt;</span>
    <span class="nt">&lt;job:dataflow</span> <span class="na">registry-center-ref=</span><span class="s">"zkCenter"</span> <span class="na">cron=</span><span class="s">"0/10 * * * * ?"</span> <span class="na">sharding-total-count=</span><span class="s">"2"</span> <span class="na">id=</span><span class="s">"myDataflowJob"</span>
                  <span class="na">class=</span><span class="s">"com.example.job.MyDataflowJob"</span> <span class="na">event-trace-rdb-data-source=</span><span class="s">"dataSource"</span>  <span class="na">overwrite=</span><span class="s">"true"</span> <span class="na">streaming-process=</span><span class="s">"true"</span> <span class="nt">&gt;</span>
        <span class="nt">&lt;job:listener</span> <span class="na">class=</span><span class="s">""</span><span class="nt">/&gt;</span>
        <span class="nt">&lt;job:distributed-listener</span> <span class="na">class=</span><span class="s">""</span> <span class="na">started-timeout-milliseconds=</span><span class="s">""</span> <span class="na">completed-timeout-milliseconds=</span><span class="s">""</span><span class="nt">/&gt;</span>
        
    <span class="nt">&lt;/job:dataflow&gt;</span>
<span class="nt">&lt;/beans&gt;</span>
</code></pre></div></div>

<ul>
  <li>放入Tomcat启动定时任务</li>
</ul>

<h4 id="springboot整合作业">springboot整合作业</h4>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;dependencies&gt;</span>
        <span class="nt">&lt;dependency&gt;</span>
            <span class="nt">&lt;groupId&gt;</span>org.springframework.boot<span class="nt">&lt;/groupId&gt;</span>
            <span class="nt">&lt;artifactId&gt;</span>spring-boot-starter-web<span class="nt">&lt;/artifactId&gt;</span>
        <span class="nt">&lt;/dependency&gt;</span>

        <span class="nt">&lt;dependency&gt;</span>
            <span class="nt">&lt;groupId&gt;</span>org.projectlombok<span class="nt">&lt;/groupId&gt;</span>
            <span class="nt">&lt;artifactId&gt;</span>lombok<span class="nt">&lt;/artifactId&gt;</span>
            <span class="nt">&lt;optional&gt;</span>true<span class="nt">&lt;/optional&gt;</span>
        <span class="nt">&lt;/dependency&gt;</span>
        <span class="nt">&lt;dependency&gt;</span>
            <span class="nt">&lt;groupId&gt;</span>org.springframework.boot<span class="nt">&lt;/groupId&gt;</span>
            <span class="nt">&lt;artifactId&gt;</span>spring-boot-starter-test<span class="nt">&lt;/artifactId&gt;</span>
            <span class="nt">&lt;scope&gt;</span>test<span class="nt">&lt;/scope&gt;</span>
        <span class="nt">&lt;/dependency&gt;</span>
        <span class="nt">&lt;dependency&gt;</span>
            <span class="nt">&lt;groupId&gt;</span>com.dangdang<span class="nt">&lt;/groupId&gt;</span>
            <span class="nt">&lt;artifactId&gt;</span>elastic-job-lite-core<span class="nt">&lt;/artifactId&gt;</span>
            <span class="nt">&lt;version&gt;</span>2.1.5<span class="nt">&lt;/version&gt;</span>
        <span class="nt">&lt;/dependency&gt;</span>
        <span class="nt">&lt;dependency&gt;</span>
            <span class="nt">&lt;groupId&gt;</span>com.dangdang<span class="nt">&lt;/groupId&gt;</span>
            <span class="nt">&lt;artifactId&gt;</span>elastic-job-lite-spring<span class="nt">&lt;/artifactId&gt;</span>
            <span class="nt">&lt;version&gt;</span>2.1.5<span class="nt">&lt;/version&gt;</span>
        <span class="nt">&lt;/dependency&gt;</span>
        <span class="nt">&lt;dependency&gt;</span>
            <span class="nt">&lt;groupId&gt;</span>org.springframework.boot<span class="nt">&lt;/groupId&gt;</span>
            <span class="nt">&lt;artifactId&gt;</span>spring-boot-configuration-processor<span class="nt">&lt;/artifactId&gt;</span>
            <span class="nt">&lt;optional&gt;</span>true<span class="nt">&lt;/optional&gt;</span>
        <span class="nt">&lt;/dependency&gt;</span>
        <span class="nt">&lt;dependency&gt;</span>
            <span class="nt">&lt;groupId&gt;</span>mysql<span class="nt">&lt;/groupId&gt;</span>
            <span class="nt">&lt;artifactId&gt;</span>mysql-connector-java<span class="nt">&lt;/artifactId&gt;</span>
            <span class="nt">&lt;version&gt;</span>8.0.15<span class="nt">&lt;/version&gt;</span>
        <span class="nt">&lt;/dependency&gt;</span>
        <span class="nt">&lt;dependency&gt;</span>
            <span class="nt">&lt;groupId&gt;</span>org.mybatis.spring.boot<span class="nt">&lt;/groupId&gt;</span>
            <span class="nt">&lt;artifactId&gt;</span>mybatis-spring-boot-starter<span class="nt">&lt;/artifactId&gt;</span>
            <span class="nt">&lt;version&gt;</span>2.0.0<span class="nt">&lt;/version&gt;</span>
        <span class="nt">&lt;/dependency&gt;</span>
    <span class="nt">&lt;/dependencies&gt;</span>

    <span class="nt">&lt;build&gt;</span>
        <span class="nt">&lt;plugins&gt;</span>
            <span class="nt">&lt;plugin&gt;</span>
                <span class="nt">&lt;groupId&gt;</span>org.springframework.boot<span class="nt">&lt;/groupId&gt;</span>
                <span class="nt">&lt;artifactId&gt;</span>spring-boot-maven-plugin<span class="nt">&lt;/artifactId&gt;</span>
            <span class="nt">&lt;/plugin&gt;</span>
            <span class="nt">&lt;plugin&gt;</span>
                <span class="nt">&lt;groupId&gt;</span>org.mybatis.generator<span class="nt">&lt;/groupId&gt;</span>
                <span class="nt">&lt;artifactId&gt;</span>mybatis-generator-maven-plugin<span class="nt">&lt;/artifactId&gt;</span>
                <span class="nt">&lt;version&gt;</span>1.3.7<span class="nt">&lt;/version&gt;</span>
                <span class="nt">&lt;dependencies&gt;</span>
                    <span class="nt">&lt;dependency&gt;</span>
                        <span class="nt">&lt;groupId&gt;</span>mysql<span class="nt">&lt;/groupId&gt;</span>
                        <span class="nt">&lt;artifactId&gt;</span>mysql-connector-java<span class="nt">&lt;/artifactId&gt;</span>
                        <span class="nt">&lt;version&gt;</span>8.0.15<span class="nt">&lt;/version&gt;</span>
                    <span class="nt">&lt;/dependency&gt;</span>
                <span class="nt">&lt;/dependencies&gt;</span>
            <span class="nt">&lt;/plugin&gt;</span>
        <span class="nt">&lt;/plugins&gt;</span>
    <span class="nt">&lt;/build&gt;</span>
</code></pre></div></div>

<ul>
  <li>目录结构
    <ul>
      <li>com.example
        <ul>
          <li>autoconfig</li>
          <li>springbootelasticjob</li>
        </ul>
      </li>
      <li>resources
        <ul>
          <li>META-INF</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>编写zookeeper中心配置类</li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">com.example.autoconfig</span><span class="o">;</span>
<span class="nd">@ConfigurationProperties</span><span class="o">(</span><span class="n">prefix</span> <span class="o">=</span> <span class="s">"elasticjob.zookeeper"</span><span class="o">)</span>
<span class="nd">@Setter@Getter</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">ZookeeperProperties</span> <span class="o">{</span>
    <span class="c1">//zookeeper地址列表</span>
    <span class="kd">private</span> <span class="nc">String</span> <span class="n">serverList</span><span class="o">;</span>
    <span class="c1">//zookeeper命名空间</span>
    <span class="kd">private</span> <span class="nc">String</span> <span class="n">namespace</span><span class="o">;</span>

<span class="o">}</span>
</code></pre></div></div>

<div class="language-properties highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="py">elasticjob.zookeeper.server-list</span><span class="p">=</span><span class="s">localhost:2181</span>
<span class="py">elasticjob.zookeeper.namespace</span><span class="p">=</span><span class="s">springboot-elasticjob</span>

<span class="py">spring.datasource.username</span><span class="p">=</span><span class="s">root</span>
<span class="py">spring.datasource.password</span><span class="p">=</span><span class="s">123456</span>
<span class="py">spring.datasource.url</span><span class="p">=</span><span class="s">jdbc:mysql://localhost:3306/dataflow?serverTimezone=Asia/Shanghai&amp;useSSL=false</span>

<span class="py">mybatis.mapper-locations</span><span class="p">=</span><span class="s">/mybatis/*.xml</span>
<span class="py">logging.pattern.dateformat</span><span class="p">=</span><span class="s">HH:mm:ss</span>
</code></pre></div></div>

<ul>
  <li>zookeeper中心自动配置</li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">com.example.autoconfig</span><span class="o">;</span>
<span class="nd">@Configuration</span>
<span class="nd">@ConditionalOnProperty</span><span class="o">(</span><span class="s">"elasticjob.zookeeper.server-list"</span><span class="o">)</span>
<span class="nd">@EnableConfigurationProperties</span><span class="o">(</span><span class="nc">ZookeeperProperties</span><span class="o">.</span><span class="na">class</span><span class="o">)</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">ZookeeperAutoConfig</span> <span class="o">{</span>

    <span class="nd">@Autowired</span>
    <span class="kd">private</span> <span class="nc">ZookeeperProperties</span> <span class="n">zookeeperProperties</span><span class="o">;</span>

    <span class="cm">/**
     * zookeeper注册中心
     * @return
     */</span>
    <span class="nd">@Bean</span><span class="o">(</span><span class="n">initMethod</span> <span class="o">=</span> <span class="s">"init"</span><span class="o">)</span>
    <span class="kd">public</span> <span class="nc">CoordinatorRegistryCenter</span> <span class="nf">zkCenter</span><span class="o">(){</span>
        <span class="nc">String</span> <span class="n">serverList</span> <span class="o">=</span> <span class="n">zookeeperProperties</span><span class="o">.</span><span class="na">getServerList</span><span class="o">();</span>
        <span class="nc">String</span> <span class="n">namespace</span> <span class="o">=</span> <span class="n">zookeeperProperties</span><span class="o">.</span><span class="na">getNamespace</span><span class="o">();</span>
        <span class="kt">var</span> <span class="n">zc</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ZookeeperConfiguration</span><span class="o">(</span><span class="n">serverList</span><span class="o">,</span><span class="n">namespace</span><span class="o">);</span>

        <span class="kt">var</span> <span class="n">crc</span><span class="o">=</span><span class="k">new</span> <span class="nc">ZookeeperRegistryCenter</span><span class="o">(</span><span class="n">zc</span><span class="o">);</span>

        <span class="k">return</span> <span class="n">crc</span><span class="o">;</span>
    <span class="o">}</span>

<span class="o">}</span>
</code></pre></div></div>

<ul>
  <li>导入自动配置处理依赖，属性文件自动提示</li>
</ul>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;dependency&gt;</span>
    <span class="nt">&lt;groupId&gt;</span>org.springframework.boot<span class="nt">&lt;/groupId&gt;</span>
    <span class="nt">&lt;artifactId&gt;</span>spring-boot-configuration-processor<span class="nt">&lt;/artifactId&gt;</span>
    <span class="nt">&lt;optional&gt;</span>true<span class="nt">&lt;/optional&gt;</span>
<span class="nt">&lt;/dependency&gt;</span>
</code></pre></div></div>

<ul>
  <li>编写@ElasticSimpleJob注解</li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">com.example.autoconfig</span><span class="o">;</span>
<span class="nd">@Target</span><span class="o">(</span><span class="nc">ElementType</span><span class="o">.</span><span class="na">TYPE</span><span class="o">)</span>
<span class="nd">@Retention</span><span class="o">(</span><span class="nc">RetentionPolicy</span><span class="o">.</span><span class="na">RUNTIME</span><span class="o">)</span>
<span class="nd">@Component</span>
<span class="kd">public</span> <span class="nd">@interface</span> <span class="nc">ElasticSimpleJob</span> <span class="o">{</span>
    <span class="c1">//作业名称</span>
    <span class="nc">String</span> <span class="nf">jobName</span><span class="o">()</span> <span class="k">default</span> <span class="s">""</span><span class="o">;</span>
    <span class="c1">//定时表达式</span>
    <span class="nc">String</span> <span class="nf">cron</span><span class="o">()</span> <span class="k">default</span> <span class="s">""</span><span class="o">;</span>
    <span class="c1">//总分片数</span>
    <span class="kt">int</span> <span class="nf">shardingTotalCount</span><span class="o">()</span> <span class="k">default</span> <span class="mi">1</span><span class="o">;</span>
    <span class="c1">//是否覆盖zookeeper中的配置</span>
    <span class="kt">boolean</span> <span class="nf">overwrite</span><span class="o">()</span> <span class="k">default</span> <span class="kc">false</span><span class="o">;</span>
    <span class="c1">//分片策略，默认为平均分配法</span>
    <span class="nc">Class</span><span class="o">&lt;?</span> <span class="kd">extends</span> <span class="nc">JobShardingStrategy</span><span class="o">&gt;</span> <span class="nf">jobStrategy</span><span class="o">()</span> <span class="k">default</span> <span class="nc">AverageAllocationJobShardingStrategy</span><span class="o">.</span><span class="na">class</span><span class="o">;</span>
    <span class="c1">//是否进行事件追踪</span>
    <span class="kt">boolean</span> <span class="nf">jobEvent</span><span class="o">()</span> <span class="k">default</span> <span class="kc">false</span><span class="o">;</span>
    <span class="c1">//作业监听器</span>
    <span class="nc">Class</span><span class="o">&lt;?</span> <span class="kd">extends</span> <span class="nc">ElasticJobListener</span><span class="o">&gt;[]</span> <span class="nf">jobListner</span><span class="o">()</span> <span class="k">default</span> <span class="o">{};</span>
<span class="o">}</span>
</code></pre></div></div>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">com.example.autoconfig</span><span class="o">;</span>
<span class="nd">@Target</span><span class="o">(</span><span class="nc">ElementType</span><span class="o">.</span><span class="na">TYPE</span><span class="o">)</span>
<span class="nd">@Retention</span><span class="o">(</span><span class="nc">RetentionPolicy</span><span class="o">.</span><span class="na">RUNTIME</span><span class="o">)</span>
<span class="nd">@Component</span>
<span class="kd">public</span> <span class="nd">@interface</span> <span class="nc">ElasticDataflowJob</span> <span class="o">{</span>

    <span class="c1">//作业名称</span>
    <span class="nc">String</span> <span class="nf">jobName</span><span class="o">()</span> <span class="k">default</span> <span class="s">""</span><span class="o">;</span>
    <span class="c1">//定时表达式</span>
    <span class="nc">String</span> <span class="nf">cron</span><span class="o">()</span> <span class="k">default</span> <span class="s">""</span><span class="o">;</span>
    <span class="c1">//总分片数</span>
    <span class="kt">int</span> <span class="nf">shardingTotalCount</span><span class="o">()</span> <span class="k">default</span> <span class="mi">1</span><span class="o">;</span>
    <span class="c1">//是否覆盖zookeeper中的配置</span>
    <span class="kt">boolean</span> <span class="nf">overwrite</span><span class="o">()</span> <span class="k">default</span> <span class="kc">false</span><span class="o">;</span>
    <span class="c1">//是否开启流式处理</span>
    <span class="kt">boolean</span> <span class="nf">streamingProcess</span><span class="o">()</span> <span class="k">default</span> <span class="kc">false</span><span class="o">;</span>
    <span class="c1">//分片策略，默认为平均分配法</span>
    <span class="nc">Class</span><span class="o">&lt;?</span> <span class="kd">extends</span> <span class="nc">JobShardingStrategy</span><span class="o">&gt;</span> <span class="nf">jobStrategy</span><span class="o">()</span> <span class="k">default</span> <span class="nc">AverageAllocationJobShardingStrategy</span><span class="o">.</span><span class="na">class</span><span class="o">;</span>
    <span class="c1">//是否进行事件追踪</span>
    <span class="kt">boolean</span> <span class="nf">jobEvent</span><span class="o">()</span> <span class="k">default</span> <span class="kc">false</span><span class="o">;</span>
    <span class="c1">//作业监听器</span>
    <span class="nc">Class</span><span class="o">&lt;?</span> <span class="kd">extends</span> <span class="nc">ElasticJobListener</span><span class="o">&gt;[]</span> <span class="nf">jobListner</span><span class="o">()</span> <span class="k">default</span> <span class="o">{};</span>
<span class="o">}</span>
</code></pre></div></div>

<ul>
  <li>使用java反射完成作业注册</li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">com.example.autoconfig</span><span class="o">;</span>
<span class="nd">@Configuration</span>
<span class="nd">@ConditionalOnBean</span><span class="o">(</span><span class="nc">CoordinatorRegistryCenter</span><span class="o">.</span><span class="na">class</span><span class="o">)</span>
<span class="nd">@AutoConfigureAfter</span><span class="o">(</span><span class="nc">ZookeeperAutoConfig</span><span class="o">.</span><span class="na">class</span><span class="o">)</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">SimpleJobAutoConfig</span> <span class="o">{</span>

    <span class="nd">@Autowired</span>
    <span class="kd">private</span> <span class="nc">CoordinatorRegistryCenter</span> <span class="n">zkCenter</span><span class="o">;</span>

    <span class="nd">@Autowired</span>
    <span class="kd">private</span> <span class="nc">ApplicationContext</span> <span class="n">applicationContext</span><span class="o">;</span>

    <span class="nd">@Autowired</span>
    <span class="kd">private</span> <span class="nc">DataSource</span> <span class="n">dataSource</span><span class="o">;</span>

    <span class="nd">@PostConstruct</span>
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">initSimpleJob</span><span class="o">()</span> <span class="kd">throws</span> <span class="nc">NoSuchMethodException</span><span class="o">,</span> <span class="nc">IllegalAccessException</span><span class="o">,</span> <span class="nc">InvocationTargetException</span><span class="o">,</span> <span class="nc">InstantiationException</span> <span class="o">{</span>
        <span class="c1">//获取所有标注了作业注解的bean</span>
        <span class="nc">Map</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">,</span> <span class="nc">Object</span><span class="o">&gt;</span> <span class="n">beans</span> <span class="o">=</span> <span class="n">applicationContext</span><span class="o">.</span><span class="na">getBeansWithAnnotation</span><span class="o">(</span><span class="nc">ElasticSimpleJob</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
        <span class="k">for</span> <span class="o">(</span><span class="nc">Map</span><span class="o">.</span><span class="na">Entry</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">,</span> <span class="nc">Object</span><span class="o">&gt;</span> <span class="n">entry</span> <span class="o">:</span> <span class="n">beans</span><span class="o">.</span><span class="na">entrySet</span><span class="o">()){</span>
            <span class="nc">Object</span> <span class="n">instance</span> <span class="o">=</span> <span class="n">entry</span><span class="o">.</span><span class="na">getValue</span><span class="o">();</span>
            <span class="nc">Class</span><span class="o">&lt;?&gt;[]</span> <span class="n">interfaces</span> <span class="o">=</span> <span class="n">instance</span><span class="o">.</span><span class="na">getClass</span><span class="o">().</span><span class="na">getInterfaces</span><span class="o">();</span>
            <span class="k">for</span> <span class="o">(</span><span class="nc">Class</span><span class="o">&lt;?&gt;</span> <span class="n">superInterface</span> <span class="o">:</span> <span class="n">interfaces</span><span class="o">){</span>
                <span class="c1">//如果作业类实现了SimpleJob这个接口就进行注册</span>
                <span class="k">if</span> <span class="o">(</span><span class="n">superInterface</span> <span class="o">==</span> <span class="nc">SimpleJob</span><span class="o">.</span><span class="na">class</span><span class="o">){</span>
                    <span class="c1">//获取作业注解信息</span>
                    <span class="nc">ElasticSimpleJob</span> <span class="n">annotation</span> <span class="o">=</span> <span class="n">instance</span><span class="o">.</span><span class="na">getClass</span><span class="o">().</span><span class="na">getAnnotation</span><span class="o">(</span><span class="nc">ElasticSimpleJob</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
                    <span class="nc">String</span> <span class="n">jobName</span> <span class="o">=</span> <span class="n">annotation</span><span class="o">.</span><span class="na">jobName</span><span class="o">();</span>
                    <span class="nc">String</span> <span class="n">cron</span> <span class="o">=</span> <span class="n">annotation</span><span class="o">.</span><span class="na">cron</span><span class="o">();</span>
                    <span class="kt">int</span> <span class="n">shardingTotalCount</span> <span class="o">=</span> <span class="n">annotation</span><span class="o">.</span><span class="na">shardingTotalCount</span><span class="o">();</span>
                    <span class="kt">boolean</span> <span class="n">overwrite</span> <span class="o">=</span> <span class="n">annotation</span><span class="o">.</span><span class="na">overwrite</span><span class="o">();</span>
                    <span class="nc">Class</span><span class="o">&lt;?&gt;</span> <span class="n">jobStrategy</span> <span class="o">=</span> <span class="n">annotation</span><span class="o">.</span><span class="na">jobStrategy</span><span class="o">();</span>
                    <span class="c1">//是否开启事件追踪</span>
                    <span class="kt">boolean</span> <span class="n">isJobEvent</span> <span class="o">=</span> <span class="n">annotation</span><span class="o">.</span><span class="na">jobEvent</span><span class="o">();</span>
                    <span class="c1">//作业监听器</span>
                    <span class="nc">Class</span><span class="o">&lt;?</span> <span class="kd">extends</span> <span class="nc">ElasticJobListener</span><span class="o">&gt;[]</span> <span class="n">listeners</span> <span class="o">=</span> <span class="n">annotation</span><span class="o">.</span><span class="na">jobListner</span><span class="o">();</span>
                    <span class="nc">ElasticJobListener</span><span class="o">[]</span> <span class="n">listenerInstances</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
                    <span class="c1">//如果监听器不为空且长度大于0</span>
                    <span class="k">if</span> <span class="o">(</span><span class="n">listeners</span><span class="o">!=</span><span class="kc">null</span> <span class="o">&amp;&amp;</span> <span class="n">listeners</span><span class="o">.</span><span class="na">length</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">){</span>
                        <span class="n">listenerInstances</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ElasticJobListener</span><span class="o">[</span><span class="n">listeners</span><span class="o">.</span><span class="na">length</span><span class="o">];</span>
                        <span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
                        <span class="k">for</span> <span class="o">(</span><span class="nc">Class</span><span class="o">&lt;?</span> <span class="kd">extends</span> <span class="nc">ElasticJobListener</span><span class="o">&gt;</span> <span class="n">listener</span> <span class="o">:</span> <span class="n">listeners</span><span class="o">){</span>
                            <span class="nc">ElasticJobListener</span> <span class="n">listenerInstance</span> <span class="o">=</span> <span class="n">listener</span><span class="o">.</span><span class="na">getDeclaredConstructor</span><span class="o">().</span><span class="na">newInstance</span><span class="o">();</span>
                            <span class="n">listenerInstances</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="n">listenerInstance</span><span class="o">;</span>
                            <span class="n">i</span><span class="o">++;</span>
                        <span class="o">}</span>
                    <span class="o">}</span><span class="k">else</span> <span class="o">{</span>
                        <span class="n">listenerInstances</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ElasticJobListener</span><span class="o">[</span><span class="mi">0</span><span class="o">];</span>
                    <span class="o">}</span>


                    <span class="c1">//job核心配置</span>
                    <span class="kt">var</span> <span class="n">jcc</span> <span class="o">=</span> <span class="nc">JobCoreConfiguration</span>
                            <span class="o">.</span><span class="na">newBuilder</span><span class="o">(</span><span class="n">jobName</span><span class="o">,</span><span class="n">cron</span><span class="o">,</span><span class="n">shardingTotalCount</span><span class="o">)</span>
                            <span class="o">.</span><span class="na">build</span><span class="o">();</span>
                    <span class="c1">//job类型配置</span>
                    <span class="kt">var</span> <span class="n">jtc</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">SimpleJobConfiguration</span><span class="o">(</span><span class="n">jcc</span><span class="o">,</span>
                            <span class="n">instance</span><span class="o">.</span><span class="na">getClass</span><span class="o">().</span><span class="na">getCanonicalName</span><span class="o">());</span>

                    <span class="c1">//job根的配置（LiteJobConfiguration）</span>
                    <span class="kt">var</span> <span class="n">ljc</span> <span class="o">=</span> <span class="nc">LiteJobConfiguration</span>
                            <span class="o">.</span><span class="na">newBuilder</span><span class="o">(</span><span class="n">jtc</span><span class="o">)</span>
                            <span class="o">.</span><span class="na">jobShardingStrategyClass</span><span class="o">(</span><span class="n">jobStrategy</span><span class="o">.</span><span class="na">getCanonicalName</span><span class="o">())</span>
                            <span class="o">.</span><span class="na">overwrite</span><span class="o">(</span><span class="n">overwrite</span><span class="o">)</span>
                            <span class="o">.</span><span class="na">build</span><span class="o">();</span>
					<span class="c1">//判断是否开启事件追踪</span>
                    <span class="k">if</span> <span class="o">(</span><span class="n">isJobEvent</span><span class="o">){</span>
                        <span class="nc">JobEventConfiguration</span> <span class="n">jec</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">JobEventRdbConfiguration</span><span class="o">(</span><span class="n">dataSource</span><span class="o">);</span>
                        <span class="k">new</span> <span class="nf">SpringJobScheduler</span><span class="o">((</span><span class="nc">ElasticJob</span><span class="o">)</span> <span class="n">instance</span><span class="o">,</span><span class="n">zkCenter</span><span class="o">,</span><span class="n">ljc</span><span class="o">,</span><span class="n">jec</span><span class="o">,</span><span class="n">listenerInstances</span><span class="o">).</span><span class="na">init</span><span class="o">();</span>
                    <span class="o">}</span><span class="k">else</span> <span class="o">{</span>
                        <span class="k">new</span> <span class="nf">SpringJobScheduler</span><span class="o">((</span><span class="nc">ElasticJob</span><span class="o">)</span> <span class="n">instance</span><span class="o">,</span><span class="n">zkCenter</span><span class="o">,</span><span class="n">ljc</span><span class="o">,</span><span class="n">listenerInstances</span><span class="o">).</span><span class="na">init</span><span class="o">();</span>
                    <span class="o">}</span>
                <span class="o">}</span>
            <span class="o">}</span>
        <span class="o">}</span>
    <span class="o">}</span>

<span class="o">}</span>
</code></pre></div></div>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nd">@Configuration</span>
<span class="nd">@ConditionalOnBean</span><span class="o">(</span><span class="nc">CoordinatorRegistryCenter</span><span class="o">.</span><span class="na">class</span><span class="o">)</span>
<span class="nd">@AutoConfigureAfter</span><span class="o">(</span><span class="nc">ZookeeperAutoConfig</span><span class="o">.</span><span class="na">class</span><span class="o">)</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">DataflowJobAutoConfig</span> <span class="o">{</span>

    <span class="nd">@Autowired</span>
    <span class="kd">private</span> <span class="nc">CoordinatorRegistryCenter</span> <span class="n">zkCenter</span><span class="o">;</span>

    <span class="nd">@Autowired</span>
    <span class="kd">private</span> <span class="nc">ApplicationContext</span> <span class="n">applicationContext</span><span class="o">;</span>

    <span class="nd">@Autowired</span>
    <span class="kd">private</span> <span class="nc">DataSource</span> <span class="n">dataSource</span><span class="o">;</span>

    <span class="nd">@PostConstruct</span>
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">initDataflowJob</span><span class="o">()</span> <span class="kd">throws</span> <span class="nc">NoSuchMethodException</span><span class="o">,</span> <span class="nc">IllegalAccessException</span><span class="o">,</span> <span class="nc">InvocationTargetException</span><span class="o">,</span> <span class="nc">InstantiationException</span> <span class="o">{</span>
        <span class="nc">Map</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">,</span> <span class="nc">Object</span><span class="o">&gt;</span> <span class="n">beans</span> <span class="o">=</span> <span class="n">applicationContext</span><span class="o">.</span><span class="na">getBeansWithAnnotation</span><span class="o">(</span><span class="nc">ElasticDataflowJob</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
        <span class="k">for</span> <span class="o">(</span><span class="nc">Map</span><span class="o">.</span><span class="na">Entry</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">,</span> <span class="nc">Object</span><span class="o">&gt;</span> <span class="n">entry</span> <span class="o">:</span> <span class="n">beans</span><span class="o">.</span><span class="na">entrySet</span><span class="o">()){</span>
            <span class="nc">Object</span> <span class="n">instance</span> <span class="o">=</span> <span class="n">entry</span><span class="o">.</span><span class="na">getValue</span><span class="o">();</span>
            <span class="nc">Class</span><span class="o">&lt;?&gt;[]</span> <span class="n">interfaces</span> <span class="o">=</span> <span class="n">instance</span><span class="o">.</span><span class="na">getClass</span><span class="o">().</span><span class="na">getInterfaces</span><span class="o">();</span>
            <span class="k">for</span> <span class="o">(</span><span class="nc">Class</span><span class="o">&lt;?&gt;</span> <span class="n">superInterface</span> <span class="o">:</span> <span class="n">interfaces</span><span class="o">){</span>
                <span class="k">if</span> <span class="o">(</span><span class="n">superInterface</span> <span class="o">==</span> <span class="nc">DataflowJob</span><span class="o">.</span><span class="na">class</span><span class="o">){</span>
                    <span class="nc">ElasticDataflowJob</span> <span class="n">annotation</span> <span class="o">=</span> <span class="n">instance</span><span class="o">.</span><span class="na">getClass</span><span class="o">().</span><span class="na">getAnnotation</span><span class="o">(</span><span class="nc">ElasticDataflowJob</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
                    <span class="nc">String</span> <span class="n">jobName</span> <span class="o">=</span> <span class="n">annotation</span><span class="o">.</span><span class="na">jobName</span><span class="o">();</span>
                    <span class="nc">String</span> <span class="n">cron</span> <span class="o">=</span> <span class="n">annotation</span><span class="o">.</span><span class="na">cron</span><span class="o">();</span>
                    <span class="kt">int</span> <span class="n">shardingTotalCount</span> <span class="o">=</span> <span class="n">annotation</span><span class="o">.</span><span class="na">shardingTotalCount</span><span class="o">();</span>
                    <span class="kt">boolean</span> <span class="n">overwrite</span> <span class="o">=</span> <span class="n">annotation</span><span class="o">.</span><span class="na">overwrite</span><span class="o">();</span>
                    <span class="kt">boolean</span> <span class="n">streamingProcess</span> <span class="o">=</span> <span class="n">annotation</span><span class="o">.</span><span class="na">streamingProcess</span><span class="o">();</span>
                    <span class="nc">Class</span><span class="o">&lt;?&gt;</span> <span class="n">jobStrategy</span> <span class="o">=</span> <span class="n">annotation</span><span class="o">.</span><span class="na">jobStrategy</span><span class="o">();</span>
                    <span class="kt">boolean</span> <span class="n">isJobEvent</span> <span class="o">=</span> <span class="n">annotation</span><span class="o">.</span><span class="na">jobEvent</span><span class="o">();</span>
                    <span class="nc">Class</span><span class="o">&lt;?</span> <span class="kd">extends</span> <span class="nc">ElasticJobListener</span><span class="o">&gt;[]</span> <span class="n">listeners</span> <span class="o">=</span> <span class="n">annotation</span><span class="o">.</span><span class="na">jobListner</span><span class="o">();</span>
                    <span class="nc">ElasticJobListener</span><span class="o">[]</span> <span class="n">listenerInstances</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
                    <span class="k">if</span> <span class="o">(</span><span class="n">listeners</span><span class="o">!=</span><span class="kc">null</span> <span class="o">&amp;&amp;</span> <span class="n">listeners</span><span class="o">.</span><span class="na">length</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">){</span>
                        <span class="n">listenerInstances</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ElasticJobListener</span><span class="o">[</span><span class="n">listeners</span><span class="o">.</span><span class="na">length</span><span class="o">];</span>
                        <span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
                        <span class="k">for</span> <span class="o">(</span><span class="nc">Class</span><span class="o">&lt;?</span> <span class="kd">extends</span> <span class="nc">ElasticJobListener</span><span class="o">&gt;</span> <span class="n">listener</span> <span class="o">:</span> <span class="n">listeners</span><span class="o">){</span>
                            <span class="nc">ElasticJobListener</span> <span class="n">listenerInstance</span> <span class="o">=</span> <span class="n">listener</span><span class="o">.</span><span class="na">getDeclaredConstructor</span><span class="o">().</span><span class="na">newInstance</span><span class="o">();</span>
                            <span class="n">listenerInstances</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="n">listenerInstance</span><span class="o">;</span>
                            <span class="n">i</span><span class="o">++;</span>
                        <span class="o">}</span>
                    <span class="o">}</span><span class="k">else</span> <span class="o">{</span>
                        <span class="n">listenerInstances</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ElasticJobListener</span><span class="o">[</span><span class="mi">0</span><span class="o">];</span>
                    <span class="o">}</span>
                    <span class="c1">//job核心配置</span>
                    <span class="kt">var</span> <span class="n">jcc</span> <span class="o">=</span> <span class="nc">JobCoreConfiguration</span>
                            <span class="o">.</span><span class="na">newBuilder</span><span class="o">(</span><span class="n">jobName</span><span class="o">,</span><span class="n">cron</span><span class="o">,</span><span class="n">shardingTotalCount</span><span class="o">)</span>
                            <span class="o">.</span><span class="na">build</span><span class="o">();</span>

                    <span class="c1">//job类型配置</span>
                    <span class="kt">var</span> <span class="n">jtc</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">DataflowJobConfiguration</span><span class="o">(</span><span class="n">jcc</span><span class="o">,</span>
                            <span class="n">instance</span><span class="o">.</span><span class="na">getClass</span><span class="o">().</span><span class="na">getCanonicalName</span><span class="o">(),</span><span class="n">streamingProcess</span><span class="o">);</span>

                    <span class="c1">//job根的配置（LiteJobConfiguration）</span>
                    <span class="kt">var</span> <span class="n">ljc</span> <span class="o">=</span> <span class="nc">LiteJobConfiguration</span>
                            <span class="o">.</span><span class="na">newBuilder</span><span class="o">(</span><span class="n">jtc</span><span class="o">)</span>
                            <span class="o">.</span><span class="na">jobShardingStrategyClass</span><span class="o">(</span><span class="n">jobStrategy</span><span class="o">.</span><span class="na">getCanonicalName</span><span class="o">())</span>
                            <span class="o">.</span><span class="na">overwrite</span><span class="o">(</span><span class="n">overwrite</span><span class="o">)</span>
                            <span class="o">.</span><span class="na">build</span><span class="o">();</span>

                    <span class="k">if</span> <span class="o">(</span><span class="n">isJobEvent</span><span class="o">){</span>
                        <span class="nc">JobEventConfiguration</span> <span class="n">jec</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">JobEventRdbConfiguration</span><span class="o">(</span><span class="n">dataSource</span><span class="o">);</span>
                        <span class="k">new</span> <span class="nf">SpringJobScheduler</span><span class="o">((</span><span class="nc">ElasticJob</span><span class="o">)</span> <span class="n">instance</span><span class="o">,</span><span class="n">zkCenter</span><span class="o">,</span><span class="n">ljc</span><span class="o">,</span><span class="n">jec</span><span class="o">,</span><span class="n">listenerInstances</span><span class="o">).</span><span class="na">init</span><span class="o">();</span>
                    <span class="o">}</span><span class="k">else</span> <span class="o">{</span>
                        <span class="k">new</span> <span class="nf">SpringJobScheduler</span><span class="o">((</span><span class="nc">ElasticJob</span><span class="o">)</span> <span class="n">instance</span><span class="o">,</span><span class="n">zkCenter</span><span class="o">,</span><span class="n">ljc</span><span class="o">,</span><span class="n">listenerInstances</span><span class="o">).</span><span class="na">init</span><span class="o">();</span>
                    <span class="o">}</span>
                <span class="o">}</span>
            <span class="o">}</span>
        <span class="o">}</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<ul>
  <li>编写作业实现类，在类上加@ElasticSimpleJob注解</li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">com.example.springbootelasticjob.job</span><span class="o">;</span>
<span class="nd">@Slf4j</span>
<span class="nd">@ElasticSimpleJob</span><span class="o">(</span>
        <span class="n">jobName</span> <span class="o">=</span> <span class="s">"mySimpleJob"</span> <span class="o">,</span>
        <span class="n">cron</span> <span class="o">=</span> <span class="s">"0/5 * * * * ?"</span><span class="o">,</span>
        <span class="n">shardingTotalCount</span> <span class="o">=</span> <span class="mi">1</span><span class="o">,</span>
        <span class="n">overwrite</span> <span class="o">=</span> <span class="kc">true</span>
<span class="o">)</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">MySimpleJob</span> <span class="kd">implements</span> <span class="nc">SimpleJob</span> <span class="o">{</span>
    <span class="nd">@Autowired</span>
    <span class="kd">private</span> <span class="nc">OrderService</span> <span class="n">orderService</span><span class="o">;</span>

    <span class="nd">@Override</span>
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">execute</span><span class="o">(</span><span class="nc">ShardingContext</span> <span class="n">shardingContext</span><span class="o">)</span> <span class="o">{</span>

        <span class="nc">LocalTime</span> <span class="n">time</span> <span class="o">=</span> <span class="nc">LocalTime</span><span class="o">.</span><span class="na">now</span><span class="o">();</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">time</span><span class="o">+</span><span class="s">",我是分片项："</span><span class="o">+</span><span class="n">shardingContext</span><span class="o">.</span><span class="na">getShardingItem</span><span class="o">()+</span>
                <span class="s">",总分片项："</span><span class="o">+</span><span class="n">shardingContext</span><span class="o">.</span><span class="na">getShardingTotalCount</span><span class="o">()+</span><span class="s">",taskId"</span><span class="o">+</span>
                <span class="n">shardingContext</span><span class="o">.</span><span class="na">getTaskId</span><span class="o">());</span>

    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">com.example.springbootelasticjob.job</span><span class="o">;</span>
<span class="nd">@Slf4j</span>
<span class="nd">@ElasticDataflowJob</span><span class="o">(</span>
        <span class="n">jobName</span> <span class="o">=</span> <span class="s">"myDataflowJob"</span><span class="o">,</span>
        <span class="n">cron</span> <span class="o">=</span> <span class="s">"0/10 * * * * ?"</span><span class="o">,</span>
        <span class="n">shardingTotalCount</span> <span class="o">=</span> <span class="mi">2</span><span class="o">,</span>
        <span class="n">overwrite</span> <span class="o">=</span> <span class="kc">true</span><span class="o">,</span>
        <span class="n">streamingProcess</span> <span class="o">=</span> <span class="kc">true</span>
<span class="o">)</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">MyDataflowJob</span> <span class="kd">implements</span> <span class="nc">DataflowJob</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;</span> <span class="o">{</span>

    <span class="kd">private</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;</span> <span class="n">list</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;&gt;();</span>

    <span class="o">{</span>
        <span class="n">list</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
        <span class="n">list</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="mi">1</span><span class="o">);</span>
        <span class="n">list</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="mi">2</span><span class="o">);</span>
        <span class="n">list</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="mi">3</span><span class="o">);</span>
        <span class="n">list</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="mi">4</span><span class="o">);</span>
        <span class="n">list</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="mi">5</span><span class="o">);</span>
        <span class="n">list</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="mi">6</span><span class="o">);</span>
        <span class="n">list</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="mi">7</span><span class="o">);</span>
        <span class="n">list</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="mi">8</span><span class="o">);</span>
        <span class="n">list</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="mi">9</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="nd">@Override</span>
    <span class="kd">public</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;</span> <span class="nf">fetchData</span><span class="o">(</span><span class="nc">ShardingContext</span> <span class="n">shardingContext</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">List</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;</span> <span class="n">rtnList</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;&gt;();</span>
        <span class="c1">//数字 % 分片总数 == 当前分片项</span>
        <span class="k">for</span> <span class="o">(</span><span class="nc">Integer</span> <span class="n">index</span> <span class="o">:</span> <span class="n">list</span><span class="o">){</span>
            <span class="k">if</span> <span class="o">(</span><span class="n">index</span> <span class="o">%</span> <span class="n">shardingContext</span><span class="o">.</span><span class="na">getShardingTotalCount</span><span class="o">()</span> <span class="o">==</span> <span class="n">shardingContext</span><span class="o">.</span><span class="na">getShardingItem</span><span class="o">()){</span>
                <span class="n">rtnList</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">index</span><span class="o">);</span>
                <span class="k">break</span><span class="o">;</span>
            <span class="o">}</span>
        <span class="o">}</span>

        <span class="k">try</span> <span class="o">{</span>
            <span class="nc">Thread</span><span class="o">.</span><span class="na">sleep</span><span class="o">(</span><span class="mi">3000</span><span class="o">);</span>
        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="nc">InterruptedException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
        <span class="o">}</span>

        <span class="n">log</span><span class="o">.</span><span class="na">info</span><span class="o">(</span><span class="s">"我是分片项："</span><span class="o">+</span><span class="n">shardingContext</span><span class="o">.</span><span class="na">getShardingItem</span><span class="o">()+</span><span class="s">"，我是抓取的数据是："</span><span class="o">+</span><span class="n">rtnList</span><span class="o">);</span>

        <span class="k">return</span> <span class="n">rtnList</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="nd">@Override</span>
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">processData</span><span class="o">(</span><span class="nc">ShardingContext</span> <span class="n">shardingContext</span><span class="o">,</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;</span> <span class="n">data</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">list</span><span class="o">.</span><span class="na">removeAll</span><span class="o">(</span><span class="n">data</span><span class="o">);</span>
        <span class="k">try</span> <span class="o">{</span>
            <span class="nc">Thread</span><span class="o">.</span><span class="na">sleep</span><span class="o">(</span><span class="mi">5000</span><span class="o">);</span>
        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="nc">InterruptedException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
        <span class="o">}</span>
        <span class="n">log</span><span class="o">.</span><span class="na">info</span><span class="o">(</span><span class="s">"我是分片项："</span><span class="o">+</span><span class="n">shardingContext</span><span class="o">.</span><span class="na">getShardingItem</span><span class="o">()+</span><span class="s">"我移除了数据："</span><span class="o">+</span><span class="n">data</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<ul>
  <li>为了把项目打成jar包后能让其他项目也能使用到我们自定义的自动配置，需要在resources目录下创建META-INF文件夹，创建spring.factories文件</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>org.springframework.boot.autoconfigure.EnableAutoConfiguration=\
com.example.autoconfig.ZookeeperAutoConfig,\
com.example.autoconfig.SimpleJobAutoConfig,\
com.example.autoconfig.DataflowJobAutoConfig
</code></pre></div></div>

<ul>
  <li>启动项目进行测试</li>
</ul>

<h4 id="定时轮询取消订单">定时轮询取消订单</h4>

<ul>
  <li>模拟30秒未支付订单自动取消，使用ElasticSimpleJob实现</li>
  <li>模拟订单生成过程,编写创建订单方法,配置定时任务每5秒执行一次</li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Order</span> <span class="o">{</span>

    <span class="kd">private</span> <span class="nc">Integer</span> <span class="n">id</span><span class="o">;</span>

    <span class="kd">private</span> <span class="nc">BigDecimal</span> <span class="n">amount</span><span class="o">;</span>

    <span class="kd">private</span> <span class="nc">Integer</span> <span class="n">status</span><span class="o">;</span>

    <span class="kd">private</span> <span class="nc">String</span> <span class="n">receiveName</span><span class="o">;</span>

    <span class="kd">private</span> <span class="nc">String</span> <span class="n">receiveAddress</span><span class="o">;</span>

    <span class="kd">private</span> <span class="nc">String</span> <span class="n">receiveMobile</span><span class="o">;</span>

    <span class="kd">private</span> <span class="nc">String</span> <span class="n">createUser</span><span class="o">;</span>

    <span class="kd">private</span> <span class="nc">Date</span> <span class="n">createTime</span><span class="o">;</span>
    
    <span class="kd">private</span> <span class="nc">String</span> <span class="n">updateUser</span><span class="o">;</span>

    <span class="kd">private</span> <span class="nc">Date</span> <span class="n">updateTime</span><span class="o">;</span>
</code></pre></div></div>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nd">@Slf4j</span>
<span class="nd">@ElasticSimpleJob</span><span class="o">(</span>
        <span class="n">jobName</span> <span class="o">=</span> <span class="s">"mySimpleJob"</span> <span class="o">,</span>
        <span class="n">cron</span> <span class="o">=</span> <span class="s">"0/5 * * * * ?"</span><span class="o">,</span>
        <span class="n">shardingTotalCount</span> <span class="o">=</span> <span class="mi">1</span><span class="o">,</span>
        <span class="n">overwrite</span> <span class="o">=</span> <span class="kc">true</span>
<span class="o">)</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">MySimpleJob</span> <span class="kd">implements</span> <span class="nc">SimpleJob</span> <span class="o">{</span>
    <span class="nd">@Autowired</span>
    <span class="kd">private</span> <span class="nc">OrderService</span> <span class="n">orderService</span><span class="o">;</span>

    <span class="nd">@Override</span>
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">execute</span><span class="o">(</span><span class="nc">ShardingContext</span> <span class="n">shardingContext</span><span class="o">)</span> <span class="o">{</span>
		<span class="c1">//每5秒向数据库中插入10条订单数据</span>
        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="mi">10</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
            <span class="n">orderService</span><span class="o">.</span><span class="na">insertOrder</span><span class="o">();</span>
        <span class="o">}</span>

    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="kt">int</span> <span class="nf">insertOrder</span><span class="o">(){</span>
        <span class="nc">Order</span> <span class="n">order</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Order</span><span class="o">();</span>
        <span class="n">order</span><span class="o">.</span><span class="na">setAmount</span><span class="o">(</span><span class="nc">BigDecimal</span><span class="o">.</span><span class="na">TEN</span><span class="o">);</span>
        <span class="n">order</span><span class="o">.</span><span class="na">setReceiveName</span><span class="o">(</span><span class="s">"Green"</span><span class="o">);</span>
        <span class="n">order</span><span class="o">.</span><span class="na">setReceiveAddress</span><span class="o">(</span><span class="s">"中国北京朝阳区xxx"</span><span class="o">);</span>
        <span class="n">order</span><span class="o">.</span><span class="na">setReceiveMobile</span><span class="o">(</span><span class="s">"13811112222"</span><span class="o">);</span>
        <span class="n">order</span><span class="o">.</span><span class="na">setStatus</span><span class="o">(</span><span class="mi">1</span><span class="o">);</span><span class="c1">//未支付</span>
        <span class="n">order</span><span class="o">.</span><span class="na">setCreateUser</span><span class="o">(</span><span class="s">"Green"</span><span class="o">);</span>
        <span class="n">order</span><span class="o">.</span><span class="na">setCreateTime</span><span class="o">(</span><span class="k">new</span> <span class="nc">Date</span><span class="o">());</span>
        <span class="n">order</span><span class="o">.</span><span class="na">setUpdateUser</span><span class="o">(</span><span class="s">"Green"</span><span class="o">);</span>
        <span class="n">order</span><span class="o">.</span><span class="na">setUpdateTime</span><span class="o">(</span><span class="k">new</span> <span class="nc">Date</span><span class="o">());</span>
        <span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="n">orderMapper</span><span class="o">.</span><span class="na">insertSelective</span><span class="o">(</span><span class="n">order</span><span class="o">);</span>
        <span class="k">return</span> <span class="n">i</span><span class="o">;</span>
    <span class="o">}</span>
</code></pre></div></div>

<ul>
  <li>编写处理超时订单的任务，编写超时订单sql,使用多线程取消订单,使用乐观锁实现取消订单业务（根据update_time）,防止我们在取消订单的时候用户突然付款了</li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nd">@ElasticSimpleJob</span><span class="o">(</span>
        <span class="n">jobName</span> <span class="o">=</span> <span class="s">"orderCancelJob"</span><span class="o">,</span>
        <span class="n">cron</span> <span class="o">=</span> <span class="s">"0/15 * * * * ?"</span><span class="o">,</span>
        <span class="n">shardingTotalCount</span> <span class="o">=</span> <span class="mi">2</span><span class="o">,</span>
        <span class="n">overwrite</span> <span class="o">=</span> <span class="kc">true</span>
<span class="o">)</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">OrderCancelJob</span> <span class="kd">implements</span> <span class="nc">SimpleJob</span> <span class="o">{</span>

    <span class="nd">@Autowired</span>
    <span class="kd">private</span> <span class="nc">OrderService</span> <span class="n">orderService</span><span class="o">;</span>

    <span class="nd">@Override</span>
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">execute</span><span class="o">(</span><span class="nc">ShardingContext</span> <span class="n">shardingContext</span><span class="o">)</span> <span class="o">{</span>
        <span class="c1">//获取30秒之前的时间点</span>
        <span class="nc">Calendar</span> <span class="n">now</span> <span class="o">=</span> <span class="nc">Calendar</span><span class="o">.</span><span class="na">getInstance</span><span class="o">();</span>
        <span class="n">now</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="nc">Calendar</span><span class="o">.</span><span class="na">SECOND</span><span class="o">,-</span><span class="mi">30</span><span class="o">);</span>
        <span class="c1">//订单尾号 % 分片总数 == 当前分片项</span>
        <span class="nc">List</span><span class="o">&lt;</span><span class="nc">Order</span><span class="o">&gt;</span> <span class="n">orders</span> <span class="o">=</span> <span class="n">orderService</span><span class="o">.</span><span class="na">getOrder</span><span class="o">(</span><span class="n">now</span><span class="o">,</span>
                <span class="n">shardingContext</span><span class="o">.</span><span class="na">getShardingTotalCount</span><span class="o">(),</span><span class="n">shardingContext</span><span class="o">.</span><span class="na">getShardingItem</span><span class="o">());</span>

        <span class="k">if</span> <span class="o">(</span><span class="n">orders</span><span class="o">!=</span><span class="kc">null</span><span class="o">&amp;&amp;</span><span class="n">orders</span><span class="o">.</span><span class="na">size</span><span class="o">()&gt;</span><span class="mi">0</span><span class="o">){</span>
            <span class="c1">//创建线程池</span>
            <span class="nc">ExecutorService</span> <span class="n">es</span> <span class="o">=</span> <span class="nc">Executors</span><span class="o">.</span><span class="na">newFixedThreadPool</span><span class="o">(</span><span class="mi">4</span><span class="o">);</span>
            <span class="k">for</span><span class="o">(</span><span class="nc">Order</span> <span class="n">order</span> <span class="o">:</span> <span class="n">orders</span><span class="o">){</span>
                <span class="n">es</span><span class="o">.</span><span class="na">execute</span><span class="o">(()-&gt;{</span>
                    <span class="c1">//更新条件</span>
                    <span class="nc">Integer</span> <span class="n">orderId</span> <span class="o">=</span> <span class="n">order</span><span class="o">.</span><span class="na">getId</span><span class="o">();</span>
                    <span class="nc">Date</span> <span class="n">updateTime</span> <span class="o">=</span> <span class="n">order</span><span class="o">.</span><span class="na">getUpdateTime</span><span class="o">();</span>
                    <span class="c1">//更新内容</span>
                    <span class="kt">int</span> <span class="n">status</span> <span class="o">=</span> <span class="mi">3</span><span class="o">;</span><span class="c1">//已取消</span>
                    <span class="nc">String</span> <span class="n">updateUser</span> <span class="o">=</span> <span class="s">"system"</span><span class="o">;</span>
                    <span class="nc">Date</span> <span class="n">updateNow</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Date</span><span class="o">();</span>

                    <span class="n">orderService</span><span class="o">.</span><span class="na">cancelOrder</span><span class="o">(</span><span class="n">orderId</span><span class="o">,</span><span class="n">updateTime</span><span class="o">,</span><span class="n">status</span><span class="o">,</span><span class="n">updateUser</span><span class="o">,</span><span class="n">updateNow</span><span class="o">);</span>
                <span class="o">});</span>
            <span class="o">}</span>
            <span class="n">es</span><span class="o">.</span><span class="na">shutdown</span><span class="o">();</span>
        <span class="o">}</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;select</span> <span class="na">id=</span><span class="s">"getOrder"</span> <span class="na">resultMap=</span><span class="s">"BaseResultMap"</span><span class="nt">&gt;</span>
      select
        <span class="nt">&lt;include</span> <span class="na">refid=</span><span class="s">"Base_Column_List"</span><span class="nt">/&gt;</span>
      from t_order
      <span class="nt">&lt;where&gt;</span>
        create_time <span class="ni">&amp;lt;</span> #{param1}
        and status = 1
        and id % #{param2} = #{param3}
      <span class="nt">&lt;/where&gt;</span>
<span class="nt">&lt;/select&gt;</span>

<span class="nt">&lt;update</span> <span class="na">id=</span><span class="s">"cancelOrder"</span><span class="nt">&gt;</span>
      update t_order set
      status = #{param3},
      update_user = #{param4},
      update_time = #{param5}
      <span class="nt">&lt;where&gt;</span>
        id = #{param1}
        and update_time = #{param2}
      <span class="nt">&lt;/where&gt;</span>
<span class="nt">&lt;/update&gt;</span>
</code></pre></div></div>

<ul>
  <li>Junit测试取消订单业务是否正确</li>
  <li>使用@ElasticSimpleJob配置分片总数，定时规则</li>
  <li>启动定时任务，测试功能正确性</li>
</ul>

<h4 id="第三方订单导入案例">第三方订单导入案例</h4>

<ul>
  <li>Dataflow流式作业实战【模拟第三方订单导入】</li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">//第三方京东订单</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">JdOrder</span> <span class="o">{</span>

    <span class="kd">private</span> <span class="nc">Integer</span> <span class="n">id</span><span class="o">;</span>

    <span class="kd">private</span> <span class="nc">Integer</span> <span class="n">status</span><span class="o">;</span>

    <span class="kd">private</span> <span class="nc">BigDecimal</span> <span class="n">amount</span><span class="o">;</span>

    <span class="kd">private</span> <span class="nc">String</span> <span class="n">createUser</span><span class="o">;</span>

    <span class="kd">private</span> <span class="nc">Date</span> <span class="n">createTime</span><span class="o">;</span>

    <span class="kd">private</span> <span class="nc">String</span> <span class="n">updateUser</span><span class="o">;</span>

    <span class="kd">private</span> <span class="nc">Date</span> <span class="n">updateTime</span><span class="o">;</span>
<span class="o">}</span>
</code></pre></div></div>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">//第三方天猫订单</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">TmallOrder</span> <span class="o">{</span>

    <span class="kd">private</span> <span class="nc">Integer</span> <span class="n">id</span><span class="o">;</span>

    <span class="kd">private</span> <span class="nc">Integer</span> <span class="n">orderStatus</span><span class="o">;</span>

    <span class="kd">private</span> <span class="nc">BigDecimal</span> <span class="n">money</span><span class="o">;</span>

    <span class="kd">private</span> <span class="nc">String</span> <span class="n">createUser</span><span class="o">;</span>

    <span class="kd">private</span> <span class="nc">Date</span> <span class="n">createTime</span><span class="o">;</span>

    <span class="kd">private</span> <span class="nc">String</span> <span class="n">updateUser</span><span class="o">;</span>

    <span class="kd">private</span> <span class="nc">Date</span> <span class="n">updateTime</span><span class="o">;</span>
<span class="o">}</span>
</code></pre></div></div>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">//本系统订单</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">AllOrder</span> <span class="o">{</span>

    <span class="kd">private</span> <span class="nc">Integer</span> <span class="n">id</span><span class="o">;</span>

    <span class="kd">private</span> <span class="nc">Integer</span> <span class="n">thirdOrderId</span><span class="o">;</span>

    <span class="kd">private</span> <span class="nc">Integer</span> <span class="n">type</span><span class="o">;</span>

    <span class="kd">private</span> <span class="nc">BigDecimal</span> <span class="n">totalAmount</span><span class="o">;</span>

    <span class="kd">private</span> <span class="nc">String</span> <span class="n">createUser</span><span class="o">;</span>

    <span class="kd">private</span> <span class="nc">Date</span> <span class="n">createTime</span><span class="o">;</span>

    <span class="kd">private</span> <span class="nc">String</span> <span class="n">updateUser</span><span class="o">;</span>

    <span class="kd">private</span> <span class="nc">Date</span> <span class="n">updateTime</span><span class="o">;</span>
</code></pre></div></div>

<ul>
  <li>编写添加订单作业,模拟第三方订单产生</li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nd">@ElasticSimpleJob</span><span class="o">(</span>
        <span class="n">jobName</span> <span class="o">=</span> <span class="s">"thirdOrderProduceJob"</span><span class="o">,</span>
        <span class="n">cron</span> <span class="o">=</span> <span class="s">"0/5 * * * * ?"</span><span class="o">,</span>
        <span class="n">shardingTotalCount</span> <span class="o">=</span> <span class="mi">1</span><span class="o">,</span>
        <span class="n">overwrite</span> <span class="o">=</span> <span class="kc">true</span>
<span class="o">)</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">ThirdOrderProduceJob</span> <span class="kd">implements</span> <span class="nc">SimpleJob</span> <span class="o">{</span>
    <span class="nd">@Autowired</span>
    <span class="kd">private</span> <span class="nc">OrderService</span> <span class="n">orderService</span><span class="o">;</span>
    <span class="nd">@Override</span>
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">execute</span><span class="o">(</span><span class="nc">ShardingContext</span> <span class="n">shardingContext</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">orderService</span><span class="o">.</span><span class="na">produceThirdOrder</span><span class="o">();</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="kt">void</span> <span class="nf">produceThirdOrder</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="mi">5</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
            <span class="nc">Random</span> <span class="n">random</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Random</span><span class="o">();</span>
            <span class="kt">int</span> <span class="n">randomInt</span> <span class="o">=</span> <span class="n">random</span><span class="o">.</span><span class="na">nextInt</span><span class="o">(</span><span class="mi">2</span><span class="o">);</span>
            <span class="c1">//京东订单</span>
            <span class="k">if</span> <span class="o">(</span><span class="n">randomInt</span> <span class="o">==</span><span class="mi">0</span><span class="o">){</span>
                <span class="n">log</span><span class="o">.</span><span class="na">info</span><span class="o">(</span><span class="s">"插入京东订单"</span><span class="o">);</span>
                <span class="nc">JdOrder</span> <span class="n">jdOrder</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">JdOrder</span><span class="o">();</span>
                <span class="n">jdOrder</span><span class="o">.</span><span class="na">setStatus</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span><span class="c1">//未抓取</span>
                <span class="n">jdOrder</span><span class="o">.</span><span class="na">setAmount</span><span class="o">(</span><span class="nc">BigDecimal</span><span class="o">.</span><span class="na">TEN</span><span class="o">);</span>
                <span class="n">jdOrder</span><span class="o">.</span><span class="na">setCreateUser</span><span class="o">(</span><span class="s">"jdUser"</span><span class="o">);</span>
                <span class="n">jdOrder</span><span class="o">.</span><span class="na">setCreateTime</span><span class="o">(</span><span class="k">new</span> <span class="nc">Date</span><span class="o">());</span>
                <span class="n">jdOrder</span><span class="o">.</span><span class="na">setUpdateUser</span><span class="o">(</span><span class="s">"jdUser"</span><span class="o">);</span>
                <span class="n">jdOrder</span><span class="o">.</span><span class="na">setUpdateTime</span><span class="o">(</span><span class="k">new</span> <span class="nc">Date</span><span class="o">());</span>
                <span class="n">jdOrderMapper</span><span class="o">.</span><span class="na">insertSelective</span><span class="o">(</span><span class="n">jdOrder</span><span class="o">);</span>
            <span class="o">}</span><span class="k">else</span> <span class="o">{</span><span class="c1">//天猫订单</span>
                <span class="n">log</span><span class="o">.</span><span class="na">info</span><span class="o">(</span><span class="s">"插入天猫订单"</span><span class="o">);</span>
                <span class="nc">TmallOrder</span> <span class="n">tmallOrder</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">TmallOrder</span><span class="o">();</span>
                <span class="n">tmallOrder</span><span class="o">.</span><span class="na">setOrderStatus</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span><span class="c1">//未抓取</span>
                <span class="n">tmallOrder</span><span class="o">.</span><span class="na">setMoney</span><span class="o">(</span><span class="k">new</span> <span class="nc">BigDecimal</span><span class="o">(</span><span class="mi">100</span><span class="o">));</span>
                <span class="n">tmallOrder</span><span class="o">.</span><span class="na">setCreateUser</span><span class="o">(</span><span class="s">"tmallUser"</span><span class="o">);</span>
                <span class="n">tmallOrder</span><span class="o">.</span><span class="na">setCreateTime</span><span class="o">(</span><span class="k">new</span> <span class="nc">Date</span><span class="o">());</span>
                <span class="n">tmallOrder</span><span class="o">.</span><span class="na">setUpdateUser</span><span class="o">(</span><span class="s">"tmallUser"</span><span class="o">);</span>
                <span class="n">tmallOrder</span><span class="o">.</span><span class="na">setUpdateTime</span><span class="o">(</span><span class="k">new</span> <span class="nc">Date</span><span class="o">());</span>
                <span class="n">tmallOrderMapper</span><span class="o">.</span><span class="na">insertSelective</span><span class="o">(</span><span class="n">tmallOrder</span><span class="o">);</span>
            <span class="o">}</span>
        <span class="o">}</span>
    <span class="o">}</span>
</code></pre></div></div>

<ul>
  <li>使用Dataflow抓取第三方订单，分片总数为2，分片项0抓取京东订单，分片项1抓取天猫订单，作业每15秒执行一次，每个分片抓取5个订单</li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nd">@ElasticDataflowJob</span><span class="o">(</span>
        <span class="n">jobName</span> <span class="o">=</span> <span class="s">"fetchThirdOrderJob"</span><span class="o">,</span>
        <span class="n">cron</span> <span class="o">=</span> <span class="s">"0/15 * * * * ?"</span><span class="o">,</span>
        <span class="n">shardingTotalCount</span> <span class="o">=</span> <span class="mi">2</span><span class="o">,</span>
        <span class="n">overwrite</span> <span class="o">=</span> <span class="kc">true</span><span class="o">,</span>
        <span class="n">streamingProcess</span> <span class="o">=</span> <span class="kc">true</span>
<span class="o">)</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">FetchThirdOrderJob</span> <span class="kd">implements</span> <span class="nc">DataflowJob</span><span class="o">&lt;</span><span class="nc">Object</span><span class="o">&gt;</span> <span class="o">{</span>
    <span class="nd">@Autowired</span>
    <span class="kd">private</span> <span class="nc">OrderService</span> <span class="n">orderService</span><span class="o">;</span>
    <span class="nd">@Autowired</span>
    <span class="kd">private</span> <span class="nc">JdOrderMapper</span> <span class="n">jdOrderMapper</span><span class="o">;</span>
    <span class="nd">@Autowired</span>
    <span class="kd">private</span> <span class="nc">TmallOrderMapper</span> <span class="n">tmallOrderMapper</span><span class="o">;</span>

    <span class="nd">@Override</span>
    <span class="kd">public</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">Object</span><span class="o">&gt;</span> <span class="nf">fetchData</span><span class="o">(</span><span class="nc">ShardingContext</span> <span class="n">shardingContext</span><span class="o">)</span> <span class="o">{</span>
        <span class="c1">//京东订单</span>
        <span class="k">if</span> <span class="o">(</span><span class="n">shardingContext</span><span class="o">.</span><span class="na">getShardingItem</span><span class="o">()</span> <span class="o">==</span> <span class="mi">0</span><span class="o">){</span>
            <span class="c1">//获取未抓取的5条数据</span>
            <span class="nc">List</span><span class="o">&lt;</span><span class="nc">JdOrder</span><span class="o">&gt;</span> <span class="n">jdOrders</span> <span class="o">=</span> <span class="n">jdOrderMapper</span><span class="o">.</span><span class="na">getNotFetchedOrder</span><span class="o">(</span><span class="mi">5</span><span class="o">);</span>
            <span class="k">if</span> <span class="o">(</span><span class="n">jdOrders</span><span class="o">!=</span><span class="kc">null</span><span class="o">&amp;&amp;</span><span class="n">jdOrders</span><span class="o">.</span><span class="na">size</span><span class="o">()&gt;</span><span class="mi">0</span><span class="o">){</span>
                <span class="nc">List</span><span class="o">&lt;</span><span class="nc">Object</span><span class="o">&gt;</span> <span class="n">jdOrderList</span> <span class="o">=</span> <span class="n">jdOrders</span><span class="o">.</span><span class="na">stream</span><span class="o">().</span><span class="na">map</span><span class="o">(</span><span class="n">jdOrder</span> <span class="o">-&gt;</span> <span class="o">(</span><span class="nc">Object</span><span class="o">)</span> <span class="n">jdOrder</span><span class="o">).</span><span class="na">collect</span><span class="o">(</span><span class="n">toList</span><span class="o">());</span>
                <span class="k">return</span> <span class="n">jdOrderList</span><span class="o">;</span>
            <span class="o">}</span>
        <span class="o">}</span><span class="k">else</span> <span class="o">{</span><span class="c1">//天猫订单</span>
            <span class="c1">//获取未抓取的5条数据</span>
            <span class="nc">List</span><span class="o">&lt;</span><span class="nc">TmallOrder</span><span class="o">&gt;</span> <span class="n">tmallOrders</span> <span class="o">=</span> <span class="n">tmallOrderMapper</span><span class="o">.</span><span class="na">getNotFetchedOrder</span><span class="o">(</span><span class="mi">5</span><span class="o">);</span>
            <span class="k">if</span> <span class="o">(</span><span class="n">tmallOrders</span><span class="o">!=</span><span class="kc">null</span><span class="o">&amp;&amp;</span><span class="n">tmallOrders</span><span class="o">.</span><span class="na">size</span><span class="o">()&gt;</span><span class="mi">0</span><span class="o">){</span>
                <span class="nc">List</span><span class="o">&lt;</span><span class="nc">Object</span><span class="o">&gt;</span> <span class="n">tmallOrderList</span> <span class="o">=</span> <span class="n">tmallOrders</span><span class="o">.</span><span class="na">stream</span><span class="o">().</span><span class="na">map</span><span class="o">(</span><span class="n">tmallOrder</span> <span class="o">-&gt;</span> <span class="o">(</span><span class="nc">Object</span><span class="o">)</span><span class="n">tmallOrder</span><span class="o">).</span><span class="na">collect</span><span class="o">(</span><span class="n">toList</span><span class="o">());</span>
                <span class="k">return</span> <span class="n">tmallOrderList</span><span class="o">;</span>
            <span class="o">}</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="kc">null</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="nd">@Override</span>
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">processData</span><span class="o">(</span><span class="nc">ShardingContext</span> <span class="n">shardingContext</span><span class="o">,</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">Object</span><span class="o">&gt;</span> <span class="n">data</span><span class="o">)</span> <span class="o">{</span>
        <span class="c1">//京东订单</span>
        <span class="k">if</span> <span class="o">(</span><span class="n">shardingContext</span><span class="o">.</span><span class="na">getShardingItem</span><span class="o">()</span> <span class="o">==</span><span class="mi">0</span><span class="o">){</span>
            <span class="k">if</span> <span class="o">(</span><span class="n">data</span><span class="o">!=</span><span class="kc">null</span><span class="o">&amp;&amp;</span><span class="n">data</span><span class="o">.</span><span class="na">size</span><span class="o">()&gt;</span><span class="mi">0</span><span class="o">){</span>
                <span class="nc">List</span><span class="o">&lt;</span><span class="nc">JdOrder</span><span class="o">&gt;</span> <span class="n">jdOrders</span> <span class="o">=</span> <span class="n">data</span><span class="o">.</span><span class="na">stream</span><span class="o">().</span><span class="na">map</span><span class="o">(</span><span class="n">d</span> <span class="o">-&gt;</span> <span class="o">(</span><span class="nc">JdOrder</span><span class="o">)</span> <span class="n">d</span><span class="o">).</span><span class="na">collect</span><span class="o">(</span><span class="n">toList</span><span class="o">());</span>
                <span class="k">for</span> <span class="o">(</span><span class="nc">JdOrder</span> <span class="n">jdOrder</span> <span class="o">:</span> <span class="n">jdOrders</span><span class="o">){</span>
                    <span class="nc">AllOrder</span> <span class="n">allOrder</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">AllOrder</span><span class="o">();</span>
                    <span class="n">allOrder</span><span class="o">.</span><span class="na">setThirdOrderId</span><span class="o">(</span><span class="n">jdOrder</span><span class="o">.</span><span class="na">getId</span><span class="o">());</span>
                    <span class="n">allOrder</span><span class="o">.</span><span class="na">setType</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span><span class="c1">//京东订单</span>
                    <span class="n">allOrder</span><span class="o">.</span><span class="na">setTotalAmount</span><span class="o">(</span><span class="n">jdOrder</span><span class="o">.</span><span class="na">getAmount</span><span class="o">());</span>
                    <span class="n">allOrder</span><span class="o">.</span><span class="na">setCreateUser</span><span class="o">(</span><span class="s">"system"</span><span class="o">);</span>
                    <span class="n">allOrder</span><span class="o">.</span><span class="na">setCreateTime</span><span class="o">(</span><span class="k">new</span> <span class="nc">Date</span><span class="o">());</span>
                    <span class="n">allOrder</span><span class="o">.</span><span class="na">setUpdateUser</span><span class="o">(</span><span class="s">"system"</span><span class="o">);</span>
                    <span class="n">allOrder</span><span class="o">.</span><span class="na">setUpdateTime</span><span class="o">(</span><span class="k">new</span> <span class="nc">Date</span><span class="o">());</span>
                    <span class="n">orderService</span><span class="o">.</span><span class="na">processJdOrder</span><span class="o">(</span><span class="n">allOrder</span><span class="o">);</span>
                <span class="o">}</span>
            <span class="o">}</span>
        <span class="o">}</span><span class="k">else</span> <span class="o">{</span><span class="c1">//天猫订单</span>
            <span class="k">if</span> <span class="o">(</span><span class="n">data</span><span class="o">!=</span><span class="kc">null</span><span class="o">&amp;&amp;</span><span class="n">data</span><span class="o">.</span><span class="na">size</span><span class="o">()&gt;</span><span class="mi">0</span><span class="o">){</span>
                <span class="nc">List</span><span class="o">&lt;</span><span class="nc">TmallOrder</span><span class="o">&gt;</span> <span class="n">tmallOrders</span> <span class="o">=</span> <span class="n">data</span><span class="o">.</span><span class="na">stream</span><span class="o">().</span><span class="na">map</span><span class="o">(</span><span class="n">d</span> <span class="o">-&gt;</span> <span class="o">(</span><span class="nc">TmallOrder</span><span class="o">)</span> <span class="n">d</span><span class="o">).</span><span class="na">collect</span><span class="o">(</span><span class="n">toList</span><span class="o">());</span>
                <span class="k">for</span> <span class="o">(</span><span class="nc">TmallOrder</span> <span class="n">tmallOrder</span> <span class="o">:</span> <span class="n">tmallOrders</span><span class="o">){</span>
                    <span class="nc">AllOrder</span> <span class="n">allOrder</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">AllOrder</span><span class="o">();</span>
                    <span class="n">allOrder</span><span class="o">.</span><span class="na">setThirdOrderId</span><span class="o">(</span><span class="n">tmallOrder</span><span class="o">.</span><span class="na">getId</span><span class="o">());</span>
                    <span class="n">allOrder</span><span class="o">.</span><span class="na">setType</span><span class="o">(</span><span class="mi">1</span><span class="o">);</span><span class="c1">//天猫订单</span>
                    <span class="n">allOrder</span><span class="o">.</span><span class="na">setTotalAmount</span><span class="o">(</span><span class="n">tmallOrder</span><span class="o">.</span><span class="na">getMoney</span><span class="o">());</span>
                    <span class="n">allOrder</span><span class="o">.</span><span class="na">setCreateUser</span><span class="o">(</span><span class="s">"system"</span><span class="o">);</span>
                    <span class="n">allOrder</span><span class="o">.</span><span class="na">setCreateTime</span><span class="o">(</span><span class="k">new</span> <span class="nc">Date</span><span class="o">());</span>
                    <span class="n">allOrder</span><span class="o">.</span><span class="na">setUpdateUser</span><span class="o">(</span><span class="s">"system"</span><span class="o">);</span>
                    <span class="n">allOrder</span><span class="o">.</span><span class="na">setUpdateTime</span><span class="o">(</span><span class="k">new</span> <span class="nc">Date</span><span class="o">());</span>
                    <span class="n">orderService</span><span class="o">.</span><span class="na">processTmallOrder</span><span class="o">(</span><span class="n">allOrder</span><span class="o">);</span>
                <span class="o">}</span>
            <span class="o">}</span>
        <span class="o">}</span>


    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;select</span> <span class="na">id=</span><span class="s">"getNotFetchedOrder"</span> <span class="na">resultType=</span><span class="s">"com.example.springbootelasticjob.model.JdOrder"</span><span class="nt">&gt;</span>
      SELECT
          <span class="nt">&lt;include</span> <span class="na">refid=</span><span class="s">"Base_Column_List"</span><span class="nt">/&gt;</span>
      FROM
          jd_order
      WHERE
          `status` = 0
      LIMIT #{param1}
<span class="nt">&lt;/select&gt;</span>

<span class="nt">&lt;select</span> <span class="na">id=</span><span class="s">"getNotFetchedOrder"</span> <span class="na">resultType=</span><span class="s">"com.example.springbootelasticjob.model.TmallOrder"</span><span class="nt">&gt;</span>
      select <span class="nt">&lt;include</span> <span class="na">refid=</span><span class="s">"Base_Column_List"</span><span class="nt">/&gt;</span>
      from tmall_order
      <span class="nt">&lt;where&gt;</span>
        order_status =0
      <span class="nt">&lt;/where&gt;</span>
      limit #{param1}
<span class="nt">&lt;/select&gt;</span>
</code></pre></div></div>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nd">@Transactional</span>
<span class="kd">public</span> <span class="kt">void</span> <span class="nf">processJdOrder</span><span class="o">(</span><span class="nc">AllOrder</span> <span class="n">allOrder</span><span class="o">)</span> <span class="o">{</span>
    <span class="c1">//订单入库</span>
    <span class="n">allOrderMapper</span><span class="o">.</span><span class="na">insertSelective</span><span class="o">(</span><span class="n">allOrder</span><span class="o">);</span>
    <span class="c1">//修改京东订单状态</span>
    <span class="nc">JdOrder</span> <span class="n">jdOrder</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">JdOrder</span><span class="o">();</span>
    <span class="n">jdOrder</span><span class="o">.</span><span class="na">setId</span><span class="o">(</span><span class="n">allOrder</span><span class="o">.</span><span class="na">getThirdOrderId</span><span class="o">());</span>
    <span class="n">jdOrder</span><span class="o">.</span><span class="na">setStatus</span><span class="o">(</span><span class="mi">1</span><span class="o">);</span><span class="c1">//已抓取</span>
    <span class="n">jdOrder</span><span class="o">.</span><span class="na">setUpdateUser</span><span class="o">(</span><span class="s">"system"</span><span class="o">);</span>
    <span class="n">jdOrder</span><span class="o">.</span><span class="na">setUpdateTime</span><span class="o">(</span><span class="k">new</span> <span class="nc">Date</span><span class="o">());</span>
    <span class="n">jdOrderMapper</span><span class="o">.</span><span class="na">updateByPrimaryKeySelective</span><span class="o">(</span><span class="n">jdOrder</span><span class="o">);</span>
<span class="o">}</span>

<span class="nd">@Transactional</span>
<span class="kd">public</span> <span class="kt">void</span> <span class="nf">processTmallOrder</span><span class="o">(</span><span class="nc">AllOrder</span> <span class="n">allOrder</span><span class="o">)</span> <span class="o">{</span>
    <span class="c1">//订单入库</span>
    <span class="n">allOrderMapper</span><span class="o">.</span><span class="na">insertSelective</span><span class="o">(</span><span class="n">allOrder</span><span class="o">);</span>
    <span class="c1">//修改天猫订单状态</span>
    <span class="nc">TmallOrder</span> <span class="n">tmallOrder</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">TmallOrder</span><span class="o">();</span>
    <span class="n">tmallOrder</span><span class="o">.</span><span class="na">setId</span><span class="o">(</span><span class="n">allOrder</span><span class="o">.</span><span class="na">getThirdOrderId</span><span class="o">());</span>
    <span class="n">tmallOrder</span><span class="o">.</span><span class="na">setOrderStatus</span><span class="o">(</span><span class="mi">1</span><span class="o">);</span><span class="c1">//已抓取</span>
    <span class="n">tmallOrder</span><span class="o">.</span><span class="na">setUpdateUser</span><span class="o">(</span><span class="s">"system"</span><span class="o">);</span>
    <span class="n">tmallOrder</span><span class="o">.</span><span class="na">setUpdateTime</span><span class="o">(</span><span class="k">new</span> <span class="nc">Date</span><span class="o">());</span>
    <span class="n">tmallOrderMapper</span><span class="o">.</span><span class="na">updateByPrimaryKeySelective</span><span class="o">(</span><span class="n">tmallOrder</span><span class="o">);</span>
<span class="o">}</span>
</code></pre></div></div>

<ul>
  <li>测试</li>
</ul>

<h4 id="自定义分片策略">自定义分片策略</h4>

<ul>
  <li>
    <p>分片策略：按照<strong>某种规则</strong>将分片项分配到<strong>生效的服务中</strong></p>
  </li>
  <li>
    <p>现有的分片策略：</p>

    <ul>
      <li>
        <p>平均分配分片（默认算法），比如有10个分片，3个服务，1=【0，1，2，9】，2=【3，4，5】，3=【6，7，8】</p>
      </li>
      <li>
        <p>作业名的哈希值奇偶数决定IP升降序算法的分片策略，比如2个分片，三个服务。当作业名称hash值为奇数时，1=【0】，2=【1】，3=【】。当作业名称hash值为偶数时，3=【0】，2=【1】，1=【】</p>
      </li>
    </ul>
  </li>
  <li>
    <p>自定义分片策略步骤：</p>

    <ul>
      <li>自定义分片类实现JobShardingStrategy接口</li>
      <li>实现sharding方法</li>
      <li>Sharding方法入参，服务实例列表，分片总数，job名称</li>
      <li>返回值，返回服务实例对应的分片项</li>
      <li>配置分片策略</li>
      <li>JobShardingStrategyClass配置分片策略类的全路径</li>
    </ul>
  </li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">com.example.springbootelasticjob.sharding</span><span class="o">;</span>
<span class="c1">//自定义分片策略</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">MyShardingStrategy</span> <span class="kd">implements</span> <span class="nc">JobShardingStrategy</span> <span class="o">{</span>
    <span class="nd">@Override</span>
    <span class="kd">public</span> <span class="nc">Map</span><span class="o">&lt;</span><span class="nc">JobInstance</span><span class="o">,</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;&gt;</span> <span class="nf">sharding</span><span class="o">(</span><span class="nc">List</span><span class="o">&lt;</span><span class="nc">JobInstance</span><span class="o">&gt;</span> <span class="n">jobInstances</span><span class="o">,</span>
                                                    <span class="nc">String</span> <span class="n">jobName</span><span class="o">,</span> <span class="kt">int</span> <span class="n">shardingTotalCount</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">Map</span><span class="o">&lt;</span><span class="nc">JobInstance</span><span class="o">,</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;&gt;</span> <span class="n">rtnMap</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">HashMap</span><span class="o">&lt;&gt;();</span>
        <span class="c1">//分片队列</span>
        <span class="nc">ArrayDeque</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;</span> <span class="n">queue</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayDeque</span><span class="o">&lt;&gt;(</span><span class="n">shardingTotalCount</span><span class="o">);</span>
        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">shardingTotalCount</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
            <span class="n">queue</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
        <span class="o">}</span>
		<span class="c1">//进行轮询给服务分配分片</span>
        <span class="k">while</span> <span class="o">(</span><span class="n">queue</span><span class="o">.</span><span class="na">size</span><span class="o">()&gt;</span><span class="mi">0</span><span class="o">){</span>
            <span class="k">for</span> <span class="o">(</span><span class="nc">JobInstance</span> <span class="n">jobInstance</span> <span class="o">:</span> <span class="n">jobInstances</span><span class="o">){</span>
                <span class="k">if</span> <span class="o">(</span><span class="n">queue</span><span class="o">.</span><span class="na">size</span><span class="o">()&gt;</span><span class="mi">0</span><span class="o">){</span>
                    <span class="nc">Integer</span> <span class="n">shardingItem</span> <span class="o">=</span> <span class="n">queue</span><span class="o">.</span><span class="na">pop</span><span class="o">();</span>
                    <span class="nc">List</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;</span> <span class="n">integers</span> <span class="o">=</span> <span class="n">rtnMap</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">jobInstance</span><span class="o">);</span>
                    <span class="k">if</span> <span class="o">(</span><span class="n">integers</span><span class="o">!=</span><span class="kc">null</span><span class="o">&amp;&amp;</span><span class="n">integers</span><span class="o">.</span><span class="na">size</span><span class="o">()&gt;</span><span class="mi">0</span><span class="o">){</span>
                        <span class="n">integers</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">shardingItem</span><span class="o">);</span>
                    <span class="o">}</span><span class="k">else</span> <span class="o">{</span>
                        <span class="nc">List</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;</span> <span class="n">list</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;&gt;();</span>
                        <span class="n">list</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">shardingItem</span><span class="o">);</span>
                        <span class="n">rtnMap</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="n">jobInstance</span><span class="o">,</span><span class="n">list</span><span class="o">);</span>
                    <span class="o">}</span>
                <span class="o">}</span>
            <span class="o">}</span>
        <span class="o">}</span>

        <span class="k">return</span> <span class="n">rtnMap</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">com.example.springbootelasticjob.job</span><span class="o">;</span>

<span class="nd">@ElasticSimpleJob</span><span class="o">(</span>
        <span class="n">jobName</span> <span class="o">=</span> <span class="s">"myShardingJob"</span><span class="o">,</span>
        <span class="n">cron</span> <span class="o">=</span> <span class="s">"0/10 * * * * ?"</span><span class="o">,</span>
        <span class="n">overwrite</span> <span class="o">=</span> <span class="kc">true</span><span class="o">,</span>
        <span class="n">shardingTotalCount</span> <span class="o">=</span> <span class="mi">10</span><span class="o">,</span>
        <span class="n">jobStrategy</span> <span class="o">=</span> <span class="nc">MyShardingStrategy</span><span class="o">.</span><span class="na">class</span><span class="o">,</span>
        <span class="n">jobEvent</span> <span class="o">=</span> <span class="kc">true</span><span class="o">,</span>
        <span class="n">jobListner</span> <span class="o">=</span> <span class="o">{</span><span class="nc">MyNormalListener</span><span class="o">.</span><span class="na">class</span><span class="o">,</span><span class="nc">MyNormalListener</span><span class="o">.</span><span class="na">class</span><span class="o">}</span>
<span class="o">)</span>
<span class="nd">@Slf4j</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">MyShardingJob</span> <span class="kd">implements</span> <span class="nc">SimpleJob</span> <span class="o">{</span>
    <span class="nd">@Override</span>
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">execute</span><span class="o">(</span><span class="nc">ShardingContext</span> <span class="n">shardingContext</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">log</span><span class="o">.</span><span class="na">info</span><span class="o">(</span><span class="s">"我是分片项："</span><span class="o">+</span><span class="n">shardingContext</span><span class="o">.</span><span class="na">getShardingItem</span><span class="o">());</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<h4 id="事件追踪">事件追踪</h4>

<ul>
  <li>作业的变更情况，配置数据源，对应的数据库自动创建表</li>
  <li>整合springboot详情请看SimpleJobAutoConfig和DataflowJobAutoConfig</li>
  <li>整合spring详情请看spring-config.xml</li>
</ul>

<h4 id="作业监听器">作业监听器</h4>

<ul>
  <li>监听作业执行前和作业执行后</li>
  <li>监听器类型分为两种：
    <ul>
      <li>每个作业节点均执行，无需考虑分布式（推荐）</li>
      <li>分布式场景中，仅单一节点执行，整个任务只有一头一尾（谨慎使用）</li>
    </ul>
  </li>
  <li>实现监听器接口，实现作业执行前，后方法</li>
  <li>每台作业均监听，需实现ElasticJobListener</li>
  <li>分布式场景中监听，需继承AbstractDistributeOnceElasticJobListener</li>
  <li>最后将监听器传入JobScheduler中</li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">com.example.springbootelasticjob.listener</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">MyNormalListener</span>  <span class="kd">implements</span> <span class="nc">ElasticJobListener</span> <span class="o">{</span>
    <span class="nd">@Override</span>
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">beforeJobExecuted</span><span class="o">(</span><span class="nc">ShardingContexts</span> <span class="n">shardingContexts</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"我是"</span><span class="o">+</span><span class="n">shardingContexts</span><span class="o">.</span><span class="na">getJobName</span><span class="o">()+</span><span class="s">"作业，在方法前！"</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="nd">@Override</span>
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">afterJobExecuted</span><span class="o">(</span><span class="nc">ShardingContexts</span> <span class="n">shardingContexts</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"我是"</span><span class="o">+</span><span class="n">shardingContexts</span><span class="o">.</span><span class="na">getJobName</span><span class="o">()+</span><span class="s">"作业，在方法后！"</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">com.example.springbootelasticjob.listener</span><span class="o">;</span>
<span class="c1">//分布式监听器，存在缺陷，不推荐使用</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">MyDistributeListener</span> <span class="kd">extends</span> <span class="nc">AbstractDistributeOnceElasticJobListener</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="nf">MyDistributeListener</span><span class="o">(</span><span class="kt">long</span> <span class="n">startedTimeoutMilliseconds</span><span class="o">,</span> <span class="kt">long</span> <span class="n">completedTimeoutMilliseconds</span><span class="o">)</span> <span class="o">{</span>
        <span class="kd">super</span><span class="o">(</span><span class="n">startedTimeoutMilliseconds</span><span class="o">,</span> <span class="n">completedTimeoutMilliseconds</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="nd">@Override</span>
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">doBeforeJobExecutedAtLastStarted</span><span class="o">(</span><span class="nc">ShardingContexts</span> <span class="n">shardingContexts</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"我是分布式监听器，我在方法执行前"</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="nd">@Override</span>
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">doAfterJobExecutedAtLastCompleted</span><span class="o">(</span><span class="nc">ShardingContexts</span> <span class="n">shardingContexts</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"我是分布式监听器，我在方法执行后"</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<ul>
  <li>修改注解和自动配置类</li>
</ul>
:ET