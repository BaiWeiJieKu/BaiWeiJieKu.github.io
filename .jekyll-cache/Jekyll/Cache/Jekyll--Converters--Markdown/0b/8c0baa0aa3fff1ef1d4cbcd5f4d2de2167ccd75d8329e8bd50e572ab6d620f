I"<ul id="markdown-toc">
  <li><a href="#过滤器" id="markdown-toc-过滤器">过滤器</a>    <ul>
      <li><a href="#编写" id="markdown-toc-编写">编写</a></li>
    </ul>
  </li>
</ul>
<h2 id="过滤器">过滤器</h2>

<ul>
  <li>过滤器Filter就像一个一个哨卡，用户的请求需要经过Filter，并且可以有多个过滤器</li>
</ul>

<p><img src="http://stepimagewm.how2j.cn/1719.png" alt="" /></p>

<h3 id="编写">编写</h3>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">filter</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.io.IOException</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.text.SimpleDateFormat</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Date</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.servlet.Filter</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.servlet.FilterChain</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.servlet.FilterConfig</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.servlet.ServletException</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.servlet.ServletRequest</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.servlet.ServletResponse</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.servlet.http.HttpServletRequest</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.servlet.http.HttpServletResponse</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">FirstFilter</span> <span class="kd">implements</span> <span class="nc">Filter</span> <span class="o">{</span>

	<span class="nd">@Override</span>
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">destroy</span><span class="o">()</span> <span class="o">{</span>

	<span class="o">}</span>

	<span class="nd">@Override</span>
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">doFilter</span><span class="o">(</span><span class="nc">ServletRequest</span> <span class="n">req</span><span class="o">,</span> <span class="nc">ServletResponse</span> <span class="n">res</span><span class="o">,</span> <span class="nc">FilterChain</span> <span class="n">chain</span><span class="o">)</span>
			<span class="kd">throws</span> <span class="nc">IOException</span><span class="o">,</span> <span class="nc">ServletException</span> <span class="o">{</span>
        <span class="c1">//类型强转</span>
		<span class="nc">HttpServletRequest</span> <span class="n">request</span> <span class="o">=</span> <span class="o">(</span><span class="nc">HttpServletRequest</span><span class="o">)</span> <span class="n">req</span><span class="o">;</span>
		<span class="nc">HttpServletResponse</span> <span class="n">response</span> <span class="o">=</span> <span class="o">(</span><span class="nc">HttpServletResponse</span><span class="o">)</span> <span class="n">res</span><span class="o">;</span>
		<span class="c1">//获取来路用户的ip地址</span>
		<span class="nc">String</span> <span class="n">ip</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="na">getRemoteAddr</span><span class="o">();</span>
        <span class="c1">//获取用户访问的页面地址</span>
		<span class="nc">String</span> <span class="n">url</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="na">getRequestURL</span><span class="o">().</span><span class="na">toString</span><span class="o">();</span>
		<span class="nc">SimpleDateFormat</span> <span class="n">sdf</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">SimpleDateFormat</span><span class="o">(</span><span class="s">"yyyy-MM-dd HH:mm:ss"</span><span class="o">);</span>
		<span class="nc">Date</span> <span class="n">d</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Date</span><span class="o">();</span>
		<span class="nc">String</span> <span class="n">date</span> <span class="o">=</span> <span class="n">sdf</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="n">d</span><span class="o">);</span>

		<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">"%s %s 访问了 %s%n"</span><span class="o">,</span> <span class="n">date</span><span class="o">,</span> <span class="n">ip</span><span class="o">,</span> <span class="n">url</span><span class="o">);</span>
        <span class="c1">//过滤器放行，表示继续运行下一个过滤器，或者最终访问的某个servlet,jsp,html等等</span>
		<span class="n">chain</span><span class="o">.</span><span class="na">doFilter</span><span class="o">(</span><span class="n">request</span><span class="o">,</span> <span class="n">response</span><span class="o">);</span>
	<span class="o">}</span>

	<span class="nd">@Override</span>
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">init</span><span class="o">(</span><span class="nc">FilterConfig</span> <span class="n">arg0</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">ServletException</span> <span class="o">{</span>
		<span class="c1">//与Servlet需要配置自启动才会随着tomcat的启动而执行init()方法不一样。</span>
        <span class="c1">//Filter一定会随着tomcat的启动自启动。</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"First Filter init()"</span><span class="o">);</span>
	<span class="o">}</span>

<span class="o">}</span>

</code></pre></div></div>

<p>web.xml</p>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	<span class="nt">&lt;filter&gt;</span>
		<span class="nt">&lt;filter-name&gt;</span>FirstFilter<span class="nt">&lt;/filter-name&gt;</span>
		<span class="nt">&lt;filter-class&gt;</span>filter.FirstFilter<span class="nt">&lt;/filter-class&gt;</span>
	<span class="nt">&lt;/filter&gt;</span>

	<span class="nt">&lt;filter-mapping&gt;</span>
		<span class="nt">&lt;filter-name&gt;</span>FirstFilter<span class="nt">&lt;/filter-name&gt;</span>
		<span class="nt">&lt;url-pattern&gt;</span>/*<span class="nt">&lt;/url-pattern&gt;</span>
	<span class="nt">&lt;/filter-mapping&gt;</span>

</code></pre></div></div>
:ET