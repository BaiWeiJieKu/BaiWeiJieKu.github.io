I"b<ul id="markdown-toc">
  <li><a href="#是什么" id="markdown-toc-是什么">是什么？</a></li>
  <li><a href="#分析步骤" id="markdown-toc-分析步骤">分析步骤</a></li>
  <li><a href="#结论" id="markdown-toc-结论">结论</a></li>
  <li><a href="#查询日志" id="markdown-toc-查询日志">查询日志</a></li>
</ul>
<h2 id="是什么">是什么？</h2>

<ul>
  <li>
    <p>Show Profile是mysql提供可以用来分析当前会话中语句执行的资源消耗情况。可以用于SQL的调优的测量</p>
  </li>
  <li>
    <p>默认情况下，参数处于关闭状态，并保存最近15次的运行结果</p>
  </li>
</ul>

<h2 id="分析步骤">分析步骤</h2>

<ul>
  <li>是否支持，看看当前的mysql版本是否支持</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Show  variables like 'profiling';
默认是关闭，使用前需要开启

</code></pre></div></div>

<ul>
  <li>开启功能，默认是关闭，使用前需要开启</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>show variables like 'profiling';
 
set profiling=1;
</code></pre></div></div>

<ul>
  <li>运行SQL</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>select * from emp group by id%10 limit 150000;

select * from emp group by id%20  order by 5
</code></pre></div></div>

<ul>
  <li>查看结果，show profiles;</li>
</ul>

<p><img src="https://raw.githubusercontent.com/BaiWeiJieKu/BaiWeiJieKu.github.io/master/images/s49.png" alt="" /></p>

<ul>
  <li>诊断SQL，show profile cpu,block io for query  n,(n为上一步前面的问题SQL数字号码);</li>
</ul>

<p><img src="https://raw.githubusercontent.com/BaiWeiJieKu/BaiWeiJieKu.github.io/master/images/s50.png" alt="" /></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>type:  
 | ALL                        --显示所有的开销信息  
 | BLOCK IO                --显示块IO相关开销  
 | CONTEXT SWITCHES --上下文切换相关开销  
 | CPU              --显示CPU相关开销信息  
 | IPC              --显示发送和接收相关开销信息  
 | MEMORY           --显示内存相关开销信息  
 | PAGE FAULTS      --显示页面错误相关开销信息  
 | SOURCE           --显示和Source_function，Source_file，Source_line相关的开销信息  
 | SWAPS            --显示交换次数相关开销的信息
</code></pre></div></div>

<h2 id="结论">结论</h2>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>converting HEAP to MyISAM 查询结果太大，内存都不够用了往磁盘上搬了
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Creating tmp table 创建临时表

1 select * from emp group by id%20 limit 120000;
 
2  select * from emp group by id%20  order by 5;

拷贝数据到临时表

用完再删除
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Copying to tmp table on disk 把内存中临时表复制到磁盘，危险！！！
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>locked
</code></pre></div></div>

<h2 id="查询日志">查询日志</h2>

<ul>
  <li>配置启用</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>在mysql的my.cnf中，设置如下：
#开启
general_log=1   
# 记录日志文件的路径
general_log_file=/path/logfile
#输出格式
log_output=FILE
</code></pre></div></div>

<ul>
  <li>编码启用</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>命令
set global general_log=1;
 
#全局日志可以存放到日志文件中，也可以存放到Mysql系统表中。存放到日志中性能更好一些，存储到表中
set global log_output='TABLE';
 
此后 ，你所编写的sql语句，将会记录到mysql库里的general_log表，可以用下面的命令查看

select * from mysql.general_log;

</code></pre></div></div>

<ul>
  <li>尽量不要在生产环境开启这个功能。</li>
</ul>
:ET