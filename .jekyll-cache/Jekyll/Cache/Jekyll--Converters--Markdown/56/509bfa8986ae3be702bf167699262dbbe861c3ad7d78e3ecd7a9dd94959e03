I"{B<ul id="markdown-toc">
  <li><a href="#步骤" id="markdown-toc-步骤">步骤</a></li>
  <li><a href="#配置文件" id="markdown-toc-配置文件">配置文件</a></li>
  <li><a href="#dao" id="markdown-toc-dao">dao</a></li>
  <li><a href="#service" id="markdown-toc-service">service</a></li>
  <li><a href="#action" id="markdown-toc-action">action</a></li>
</ul>
<h3 id="步骤">步骤</h3>

<div class="language-properties highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">1).</span> <span class="err">整合目标</span> <span class="err">?</span> <span class="err">使</span> <span class="err">IOC</span> <span class="err">容器来管理</span> <span class="err">Struts2</span> <span class="err">的</span> <span class="err">Action</span><span class="c">!
</span>
<span class="err">2).</span> <span class="err">如何进行整合</span> <span class="err">?</span> 

<span class="err">①.</span> <span class="err">正常加入</span> <span class="err">Struts2</span>

<span class="err">②.</span> <span class="err">在</span> <span class="err">Spring</span> <span class="err">的</span> <span class="err">IOC</span> <span class="err">容器中配置</span> <span class="err">Struts2</span> <span class="err">的</span> <span class="err">Action</span>
<span class="err">注意:</span> <span class="err">在</span> <span class="err">IOC</span> <span class="err">容器中配置</span> <span class="err">Struts2</span> <span class="err">的</span> <span class="err">Action</span> <span class="err">时,</span> <span class="err">需要配置</span> <span class="err">scope</span> <span class="err">属性,</span> <span class="err">其值必须为</span> <span class="err">prototype</span>

<span class="err">&lt;bean</span> <span class="py">id</span><span class="p">=</span><span class="s">"personAction"</span> 
	<span class="s">class="com.atguigu.spring.struts2.actions.PersonAction"</span>
	<span class="py">scope</span><span class="p">=</span><span class="s">"prototype"&gt;</span>
	<span class="err">&lt;property</span> <span class="py">name</span><span class="p">=</span><span class="s">"personService"</span> <span class="s">ref="personService"&gt;&lt;/property&gt;	</span>
<span class="err">&lt;/bean&gt;</span>

<span class="err">③.</span> <span class="err">配置</span> <span class="err">Struts2</span> <span class="err">的配置文件:</span> <span class="err">action</span> <span class="err">节点的</span> <span class="err">class</span> <span class="err">属性需要指向</span> <span class="err">IOC</span> <span class="err">容器中该</span> <span class="err">bean</span> <span class="err">的</span> <span class="err">id</span>

<span class="err">&lt;action</span> <span class="py">name</span><span class="p">=</span><span class="s">"person-save"</span> <span class="s">class="personAction"&gt;</span>
	<span class="err">&lt;result&gt;/success.jsp&lt;/result&gt;</span>
<span class="err">&lt;/action&gt;</span> 

<span class="err">④.</span> <span class="err">加入</span> <span class="err">struts2-spring-plugin-2.3.15.3.jar</span>

<span class="err">3).</span> <span class="err">整合原理:</span> <span class="err">通过添加</span> <span class="err">struts2-spring-plugin-2.3.15.3.jar</span> <span class="err">以后,</span> <span class="err">Struts2</span> <span class="err">会先从</span> <span class="err">IOC</span> <span class="err">容器中</span>
<span class="err">获取</span> <span class="err">Action</span> <span class="err">的实例.</span>

<span class="err">if</span> <span class="err">(appContext.containsBean(beanName))</span> <span class="err">{</span>
    <span class="py">o</span> <span class="p">=</span> <span class="s">appContext.getBean(beanName);</span>
<span class="err">}</span> <span class="err">else</span> <span class="err">{</span>
    <span class="err">Class</span> <span class="py">beanClazz</span> <span class="p">=</span> <span class="s">getClassInstance(beanName);</span>
    <span class="py">o</span> <span class="p">=</span> <span class="s">buildBean(beanClazz, extraContext);</span>
<span class="err">}</span>
</code></pre></div></div>

<h3 id="配置文件">配置文件</h3>

<ul>
  <li>web.xml</li>
</ul>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span>
<span class="nt">&lt;web-app</span> <span class="na">xmlns:xsi=</span><span class="s">"http://www.w3.org/2001/XMLSchema-instance"</span> <span class="na">xmlns=</span><span class="s">"http://java.sun.com/xml/ns/javaee"</span> <span class="na">xsi:schemaLocation=</span><span class="s">"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"</span> <span class="na">id=</span><span class="s">"WebApp_ID"</span> <span class="na">version=</span><span class="s">"2.5"</span><span class="nt">&gt;</span>

	<span class="c">&lt;!-- 配置 Spring 配置文件的名称和位置 --&gt;</span>
	<span class="nt">&lt;context-param&gt;</span>
		<span class="nt">&lt;param-name&gt;</span>contextConfigLocation<span class="nt">&lt;/param-name&gt;</span>
		<span class="nt">&lt;param-value&gt;</span>classpath:applicationContext.xml<span class="nt">&lt;/param-value&gt;</span>
	<span class="nt">&lt;/context-param&gt;</span>
	
	<span class="c">&lt;!-- 启动 IOC 容器的 ServletContextListener --&gt;</span>
	<span class="nt">&lt;listener&gt;</span>
		<span class="nt">&lt;listener-class&gt;</span>org.springframework.web.context.ContextLoaderListener<span class="nt">&lt;/listener-class&gt;</span>
	<span class="nt">&lt;/listener&gt;</span>
	
	<span class="c">&lt;!-- 配置 Struts2 的 Filter --&gt;</span>
	<span class="nt">&lt;filter&gt;</span>
        <span class="nt">&lt;filter-name&gt;</span>struts2<span class="nt">&lt;/filter-name&gt;</span>
        <span class="nt">&lt;filter-class&gt;</span>org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter<span class="nt">&lt;/filter-class&gt;</span>
    <span class="nt">&lt;/filter&gt;</span>

    <span class="nt">&lt;filter-mapping&gt;</span>
        <span class="nt">&lt;filter-name&gt;</span>struts2<span class="nt">&lt;/filter-name&gt;</span>
        <span class="nt">&lt;url-pattern&gt;</span>/*<span class="nt">&lt;/url-pattern&gt;</span>
    <span class="nt">&lt;/filter-mapping&gt;</span>

<span class="nt">&lt;/web-app&gt;</span>
</code></pre></div></div>

<ul>
  <li>appliationContext.xml</li>
</ul>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span>
 
<span class="c">&lt;!-- 引入的Spring的约束，已经很全了 --&gt;</span>
<span class="nt">&lt;beans</span> <span class="na">xmlns=</span><span class="s">"http://www.springframework.org/schema/beans"</span>
    <span class="na">xmlns:xsi=</span><span class="s">"http://www.w3.org/2001/XMLSchema-instance"</span>
    <span class="na">xmlns:context=</span><span class="s">"http://www.springframework.org/schema/context"</span>
    <span class="na">xmlns:aop=</span><span class="s">"http://www.springframework.org/schema/aop"</span>
    <span class="na">xmlns:tx=</span><span class="s">"http://www.springframework.org/schema/tx"</span>
    <span class="na">xsi:schemaLocation=</span><span class="s">"http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx.xsd"</span><span class="nt">&gt;</span>
 
	<span class="c">&lt;!-- 开启注解扫描 --&gt;</span>
    <span class="nt">&lt;context:component-scan</span> <span class="na">base-package=</span><span class="s">"com.ssh"</span><span class="nt">&gt;</span>  
        <span class="c">&lt;!-- 不扫描controller包下的UserController类，既去除注解   --&gt;</span>
        <span class="c">&lt;!-- &lt;context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/&gt; --&gt;</span>  
    <span class="nt">&lt;/context:component-scan&gt;</span>
    
    <span class="c">&lt;!-- userDao --&gt;</span>
    <span class="c">&lt;!-- &lt;bean id="userDao" class="com.ssh.dao.UserDao"&gt;&lt;/bean&gt; --&gt;</span>
 
    <span class="c">&lt;!-- userService --&gt;</span>
    <span class="c">&lt;!-- &lt;bean id="userService" class="com.ssh.service.UserService"&gt;
        &lt;property name="userDao" ref="userDao"&gt;&lt;/property&gt;
    &lt;/bean&gt; --&gt;</span>
    
    <span class="c">&lt;!-- 配置action的对象 --&gt;</span>
    <span class="c">&lt;!-- 注意action是多实例的，因此我们这里把scope配置为prototype的 --&gt;</span>
    <span class="c">&lt;!-- &lt;bean id="userAction" class="com.ssh.action.UserAction" scope="prototype"&gt;
        &lt;property name="userService" ref="userService"&gt;&lt;/property&gt;
    &lt;/bean&gt; --&gt;</span>
     
 
<span class="nt">&lt;/beans&gt;</span>
</code></pre></div></div>

<ul>
  <li>struts.xml</li>
</ul>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span>
 
<span class="cp">&lt;!DOCTYPE struts PUBLIC
    "-//Apache Software Foundation//DTD Struts Configuration 2.3//EN"
    "http://struts.apache.org/dtds/struts-2.3.dtd"&gt;</span>
 
<span class="nt">&lt;struts&gt;</span>
	<span class="c">&lt;!-- 在struts.xml中指定objectFactory对象工厂为spring，即action的创建交由spring进行 --&gt;</span>
	<span class="nt">&lt;constant</span> <span class="na">name=</span><span class="s">"struts.objectFactory"</span> <span class="na">value=</span><span class="s">"spring"</span><span class="nt">/&gt;</span>
	
	<span class="nt">&lt;package</span> <span class="na">name=</span><span class="s">"demo1"</span> <span class="na">extends=</span><span class="s">"struts-default"</span> <span class="na">namespace=</span><span class="s">"/"</span><span class="nt">&gt;</span>
        <span class="c">&lt;!-- class属性是从Spring IoC中获取的 --&gt;</span>
        <span class="nt">&lt;action</span> <span class="na">name=</span><span class="s">"userAction"</span> <span class="na">class=</span><span class="s">"userAction"</span><span class="nt">&gt;</span>
        <span class="nt">&lt;/action&gt;</span>
 
    <span class="nt">&lt;/package&gt;</span>
<span class="nt">&lt;/struts&gt;</span>
</code></pre></div></div>

<h3 id="dao">dao</h3>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">com.ssh.dao</span><span class="o">;</span>
 
<span class="kn">import</span> <span class="nn">org.springframework.stereotype.Repository</span><span class="o">;</span>
 
<span class="nd">@Repository</span> 
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">UserDao</span> <span class="o">{</span>
 
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">add</span><span class="o">()</span> <span class="o">{</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"userDao ......"</span><span class="o">);</span>
    <span class="o">}</span>
 
<span class="o">}</span>
</code></pre></div></div>

<h3 id="service">service</h3>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">com.ssh.service</span><span class="o">;</span>
 
<span class="kn">import</span> <span class="nn">javax.annotation.Resource</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.springframework.stereotype.Service</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.ssh.dao.UserDao</span><span class="o">;</span>
 
<span class="c1">//@Service(value="userService")--value="userService"可不要，因为UserServiece的默认bean的name为小写字母开头的类名</span>
<span class="nd">@Service</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">UserService</span> <span class="o">{</span>
	
    <span class="nd">@Resource</span>
    <span class="kd">private</span> <span class="nc">UserDao</span> <span class="n">userDao</span><span class="o">;</span>
 
    <span class="kd">public</span> <span class="nc">UserDao</span> <span class="nf">getUserDao</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">userDao</span><span class="o">;</span>
    <span class="o">}</span>
 
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setUserDao</span><span class="o">(</span><span class="nc">UserDao</span> <span class="n">userDao</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">userDao</span> <span class="o">=</span> <span class="n">userDao</span><span class="o">;</span>
    <span class="o">}</span>
 
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">add</span><span class="o">()</span> <span class="o">{</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"userService ......"</span><span class="o">);</span>
        <span class="n">userDao</span><span class="o">.</span><span class="na">add</span><span class="o">();</span>
    <span class="o">}</span>
 
<span class="o">}</span>
</code></pre></div></div>

<h3 id="action">action</h3>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">com.ssh.action</span><span class="o">;</span>
 
<span class="kn">import</span> <span class="nn">org.springframework.beans.factory.annotation.Autowired</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.springframework.context.annotation.Scope</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.springframework.stereotype.Controller</span><span class="o">;</span>
 
<span class="kn">import</span> <span class="nn">com.opensymphony.xwork2.ActionSupport</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.ssh.service.UserService</span><span class="o">;</span>
 
<span class="nd">@Controller</span>
<span class="nd">@Scope</span><span class="o">(</span><span class="s">"prototype"</span><span class="o">)</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">UserAction</span> <span class="kd">extends</span> <span class="nc">ActionSupport</span> <span class="o">{</span>
	
    <span class="nd">@Autowired</span>
    <span class="kd">private</span> <span class="nc">UserService</span> <span class="n">userService</span><span class="o">;</span>
 
    <span class="kd">public</span> <span class="nc">UserService</span> <span class="nf">getUserService</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">userService</span><span class="o">;</span>
    <span class="o">}</span>
 
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setUserService</span><span class="o">(</span><span class="nc">UserService</span> <span class="n">userService</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">userService</span> <span class="o">=</span> <span class="n">userService</span><span class="o">;</span>
    <span class="o">}</span>
 
    <span class="nd">@Override</span>
    <span class="kd">public</span> <span class="nc">String</span> <span class="nf">execute</span><span class="o">()</span> <span class="kd">throws</span> <span class="nc">Exception</span> <span class="o">{</span>
 
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"userAction ......."</span><span class="o">);</span>
        <span class="c1">// 调用userService中方法发</span>
        <span class="n">userService</span><span class="o">.</span><span class="na">add</span><span class="o">();</span>
 
        <span class="k">return</span> <span class="no">NONE</span><span class="o">;</span>    <span class="c1">// 表示返回到任何页面中去</span>
    <span class="o">}</span>
 
<span class="o">}</span>
</code></pre></div></div>

:ET